'use strict';

var dt_xml_payment_reset;
var swalTitle = "XML Payment Reset";
heightContainer = 305;

$(document).ready(function () {

    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });

    $('#filter_generate_date').flatpickr({
        dateFormat: "Y-m-d",
        altInput: true,
        altFormat: "d-m-Y",
        disableMobile: "true",
    });
    $('#filter_generate_date').next().css('background-color', '#fff !important');

    getListEntity();
    getListUserProfile();

    dt_xml_payment_reset = $('#dt_xml_payment_reset').DataTable({
        dom:
            "<'row'<'dt_toolbar'>>" +
            "<'row'<'col-sm-12'Rtr>>" +
            "<'row'<'col-sm-12'<'dt-footer'>>>" +
            "<'row '<'col-sm-1'l><'col-sm-4'i><'col-sm-7'p>>",
        ajax: {
            url: '/tools/xml-payment-reset/list',
            type: 'get',
        },
        processing: true,
        serverSide: false,
        paging: true,
        ordering: true,
        searching: true,
        scrollX: true,
        autoWidth: false,
        lengthMenu: [[10, 20, 50, 100], [10, 20, 50, 100]],
        deferRender: true,
        order: [[2, 'desc']],
        columnDefs: [
            {
                targets: 0,
                title: '',
                data: 'null',
                searchable: false,
                orderable: false,
                defaultContent: '',
                width: 10,
                className: 'details-control text-center',
            },
            {
                targets: 1,
                data: 'id',
                width: 5,
                searchable: false,
                className: 'text-nowrap dt-body-start text-center',
                checkboxes: {
                    'selectRow': false
                },
            },
            {
                targets: 2,
                title: 'Entity',
                data: 'entity',
                width: 150,
                className: 'text-nowrap align-middle',
            },
            {
                targets: 3,
                title: 'XML PO Number',
                data: 'poNumber',
                width: 120,
                className: 'align-middle',
            },
            {
                targets: 4,
                title: 'DN/Invoice Number',
                data: 'originalId',
                width: 150,
                className: 'align-middle',
            },
            {
                targets: 5,
                title: 'Last Generated By',
                data: 'generateBy',
                width: 225,
                className: 'align-middle'
            },
            {
                targets: 6,
                title: 'Last Generated On',
                data: 'generateOn',
                width: 100,
                className: 'align-middle',
                render: function (data, type, full, meta) {
                    if (data) {
                        return formatDateTime(data);
                    } else {
                        return "";
                    }
                }
            },
        ],
        initComplete: function (settings, json) {

        },
        drawCallback: function (settings, json) {

        },
    });

    $.fn.dataTable.ext.errMode = function (e, settings, helpPage, message) {
        console.log(e.jqXHR);
        let strmessage = e.jqXHR.responseJSON.message
        if (strmessage === "") strmessage = "Please contact your vendor"
        Swal.fire({
            text: strmessage,
            icon: "warning",
            buttonsStyling: !1,
            confirmButtonText: "OK",
            customClass: {confirmButton: "btn btn-optima"},
            closeOnConfirm: false,
            showLoaderOnConfirm: false,
            closeOnClickOutside: false,
            closeOnEsc: false,
            allowOutsideClick: false,

        });
    };

    $(document).on('click', '.details-control', function (e) {
        let tr = $(this).closest('tr');
        let row = dt_xml_payment_reset.row(tr);

        if (row.child.isShown()) {
            row.child.hide();
            tr.removeClass('shown');
        }
        else {
            row.child(showDetail(row.data())).show();
            tr.addClass('shown');
        }
    });

});

$('#dt_xml_payment_reset_search').on('keyup', function() {
    dt_xml_payment_reset.search(this.value).draw();
});

$('#btn_clear_generate_date').on('click', function () {
    $('#filter_generate_date').flatpickr().clear();
});

$('#dt_xml_payment_reset_view').on('click', function (){
    let e = document.getElementById('dt_xml_payment_reset_view');
    let entityId = ($('#filter_entity').val()) ?? "";
    let userProfileId = ($('#filter_user_profile').val()) ?? "";
    let generateOn = ($('#filter_generate_date').val()) ?? "";
    let url = "/tools/xml-payment-reset/list?&entityId=" + entityId + "&userProfileId=" + userProfileId + "&generateOn=" + generateOn;
    e.setAttribute("data-kt-indicator", "on");
    e.disabled = !0;
    $('#btn_submit').attr('disabled', true);
    dt_xml_payment_reset.ajax.url(url).load(function () {
        e.setAttribute("data-kt-indicator", "off");
        e.disabled = !1;
        $('#btn_submit').attr('disabled', false);
    });
});

$('#btn_submit').on('click', function () {
    let e = document.querySelector("#btn_submit");
    let dataRowsChecked = [];
    let rows_selected = dt_xml_payment_reset.column(1).checkboxes.selected();
    $.each(rows_selected, function (index, value) {
        dataRowsChecked.push({
            id: value,
        });
    });
    if (dataRowsChecked.length > 0) {
        let formData = new FormData();
        formData.append('updateId', JSON.stringify(dataRowsChecked));
        let url = "/tools/xml-payment-reset/update";
        $.ajax({
            url         : url,
            data        : formData,
            type        : 'POST',
            async       : true,
            dataType    : 'JSON',
            cache       : false,
            contentType : false,
            processData : false,
            beforeSend: function() {
                e.setAttribute("data-kt-indicator", "on");
                e.disabled = !0;
            },
            success: function(result, status, xhr, $form) {
                if (!result.error) {
                    Swal.fire({
                        title: swalTitle,
                        text: result.message,
                        icon: "success",
                        confirmButtonText: "OK",
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        customClass: {confirmButton: "btn btn-optima"}
                    }).then(function () {
                        window.location.href = '/tools/xml-payment-reset';
                    });
                } else {
                    Swal.fire({
                        title: swalTitle,
                        text: result.message,
                        icon: "error",
                        confirmButtonText: "OK",
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        customClass: {confirmButton: "btn btn-optima"}
                    });
                }
            },
            complete: function() {
                e.setAttribute("data-kt-indicator", "off");
                e.disabled = !1;
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR.message)
                Swal.fire({
                    title: swalTitle,
                    text: "Failed to save data, an error occurred in the process",
                    icon: "error",
                    confirmButtonText: "OK",
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    customClass: {confirmButton: "btn btn-optima"}
                });
            }
        });
    } else {
        Swal.fire({
            title: swalTitle,
            text: "Please select one or more items",
            icon: "warning",
            buttonsStyling: !1,
            confirmButtonText: "OK",
            allowOutsideClick: false,
            allowEscapeKey: false,
            customClass: {confirmButton: "btn btn-optima"}
        });
    }
});

const getListEntity = () => {
    $.ajax({
        url         : "/tools/xml-payment-reset/list/entity",
        type        : "GET",
        dataType    : 'json',
        async       : true,
        success: function(result) {
            let data = [];
            for (let j = 0, len = result.data.length; j < len; ++j){
                data.push({
                    id: result.data[j].id,
                    text: result.data[j].shortDesc + " - " + result.data[j].longDesc,
                    longDesc: result.data[j].longDesc
                });
            }
            $('#filter_entity').select2({
                placeholder: "Select an Entity",
                width: '100%',
                data: data
            });
        },
        complete: function() {

        },
        error: function (jqXHR, textStatus, errorThrown)
        {
            console.log(jqXHR.responseText);
        }
    });
}

const getListUserProfile = () => {
    $.ajax({
        url         : "/tools/xml-payment-reset/list/user-profile",
        type        : "GET",
        dataType    : 'json',
        async       : true,
        success: function(result) {
            let data = [];
            for (let j = 0, len = result.data.length; j < len; ++j){
                data.push({
                    id: result.data[j].id,
                    text: result.data[j].id,
                });
            }
            $('#filter_user_profile').select2({
                placeholder: "Select a User",
                width: '100%',
                data: data
            });
        },
        complete: function() {

        },
        error: function (jqXHR, textStatus, errorThrown)
        {
            console.log(jqXHR.responseText);
        }
    });
}

const showDetail = (data) => {
    let div = $('<div/>').addClass('loading').text('Loading...');

    let url = '/tools/xml-payment-reset/data-detail';

    $.ajax({
        url: url,
        method: "GET",
        data: {poNumber: data.poNumber},
        dataType: 'json',
        success: function (result) {
            let values = result.data;
            let strHTML = '<table class="table table-sm table-condensed mb-1 ms-10 w-50">' +
                '<thead><tr>' +
                '<th class="fw-bold">XML PO Number</th><th class="fw-bold">Reset By</th><th class="fw-bold">Reset On</th>' +
                '</tr></thead>';
            for (let j = 0, len = values.length; j < len; ++j) {
                let dResetOn = ""
                dResetOn = ((values[j].deletedOn) ? formatDateTime(values[j].deletedOn) : "");

                strHTML = strHTML + '<tr class="py-1">' +
                    '<td>' + values[j].poNumber + '</td><td>' + values[j].deletedBy + '</td><td>' + dResetOn + '</td>' +
                    '</tr>'
            }
            strHTML = strHTML + '</table>';
            div.html(strHTML).removeClass('loading');
        },
        error: function (jqXHR, textStatus, errorThrown) {
            div.html('').removeClass('loading');
        }
    });
    return div;
}
