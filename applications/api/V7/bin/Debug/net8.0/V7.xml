<?xml version="1.0"?>
<doc>
    <assembly>
        <name>V7</name>
    </assembly>
    <members>
        <member name="T:V7.Controllers.AuthController">
            <summary>
            Controller that handle user authentication
            https://restfulapi.net/http-status-codes/
            </summary>
        </member>
        <member name="M:V7.Controllers.AuthController.#ctor(Repositories.Contracts.IAuthUserRepository,Repositories.Contracts.IToolsFileRepository,Microsoft.Extensions.Configuration.IConfiguration,V7.Services.IFileService,Repositories.Contracts.IAuthMenuRepository,Repositories.Contracts.IToolsEmailRepository,Repositories.Contracts.IAuditLogger)">
            <summary>
            controller injected with other interface that will used inside
            </summary>
            <param name="repoUser"></param>
            <param name="fileRepo"></param>
            <param name="config"></param>
            <param name="serviceFile"></param>
            <param name="repoMenu"></param>
            <param name="repoEmail"></param>
            <param name="auditLogger"></param>
        </member>
        <member name="M:V7.Controllers.AuthController.Login(V7.Model.Login)">
            <summary>
            succesfully login. will provide user profiles
            </summary>
            <param name="Auth"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.GetViewUrl">
            <summary>
            construct url for viewing server files
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.ResetIsLogin">
            <summary>
            To reset user IsLogin data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.IsLogin">
            <summary>
            Get user IsLogin data
            </summary>
            <remarks>
            This will return the number of IsLogin
            </remarks>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.UpdateIsLogin">
            <summary>
            update after user login
            </summary>
            <remarks>
            This will return the number of IsLogin
            </remarks>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.AuthClaim">
            <summary>
            Claim user data  based on token
            </summary>
            <remarks>return:  (useremail, profileid, usergroupid, userlevel)</remarks>
            <returns>Auth Claim</returns>
        </member>
        <member name="M:V7.Controllers.AuthController.ChangeOldPassword(Repositories.Entities.Dtos.UserOldPasswordChange)">
            <summary>
            replace old password with new
            </summary>
            <remarks>Validate proses: select data based on email</remarks>
            <param name="body">Body Param</param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.ChangeProfile(System.String)">
            <summary>
            Change user profile after login. get user email from token claim
            </summary>
            <remarks>return values
                {
                           Token,
                           UserGroupID,
                           UserGroupName,
                           UserLevel,
                           userProfileId,
                           tokenExpiredTime,
                           categoryId
                }
            
            </remarks>
            <param name="profileID">Profile ID from login response</param>
            <returns></returns>        
        </member>
        <member name="M:V7.Controllers.AuthController.Store(Repositories.Entities.Dtos.PictureProfileBody)">
            <summary>
            Upload files, generate filecode, update user pict profile. 
            </summary>
            <remarks>
            Return: New pict profile url
            </remarks>
            <param name="body">
            param is required
            </param>
        </member>
        <member name="M:V7.Controllers.AuthController.Update(Repositories.Entities.Dtos.PictureProfileBody)">
            <summary>
            upload file, Update profile picture filename in table. Pict profile url still the same
            </summary>
            <remarks>
            Return: Pict profile url
            </remarks>        
            
            <param name="body">body</param>
            <returns>pict profile url</returns>
        </member>
        <member name="M:V7.Controllers.AuthController.GetMenuByUserGroupLevel">
            <summary>
            Get user menu based on userGroup and userLevel
            </summary>
            <remarks>userGroup and userLevel are provide by token claim
            Return: Menu
            </remarks>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.SendEmail(V7.Model.EmailForgotPassBody)">
            <summary>
            Send single Email with user email exist checking (no cc, bcc, attch)
            </summary>
            <Author>andrie, May 31 2023</Author>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.ResetPassword(V7.Model.EmailResetBody)">
            <summary>
            Reset and send generated new password via email
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.GetProfile">
            <summary>
            Get user profile based on user Email login
            </summary>
            <remarks>userEmail are provide by token claim
            Return: Menu
            </remarks>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.GetByEmail(System.String)">
            <summary>
            Get user profile based on user Email
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.AuthController.DeleteUserEmail(Repositories.Entities.Dtos.EmailDeleteBody)">
            <summary>
            Delete profile based on user Email
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="T:V7.Controllers.Budget.BudgetController">
            <summary>
            Budget Handle Controller
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Budget Handle Controller
            </summary>
            <summary>
            Budget Handle Controller
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Budget Handle Controller
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Budget TT Control handler
            </summary>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAllocationRegion">
            <summary>
            Get list region
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAllocationChannel">
            <summary>
            Get list channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAllocationSubChannel(System.Int32)">
            <summary>
            Get Subchannel by channelId
            </summary>
            <param name="channelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAllocationAccount(System.Int32)">
            <summary>
            Get List Account by subChannelId
            </summary>
            <param name="subChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAllocationSubAccount(System.Int32)">
            <summary>
            Get list SUb account by accountId
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAllocationUser">
            <summary>
            List Active User
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAllocationBrand(System.Int32,System.Int32[])">
            <summary>
            List Brand based on budget
            </summary>
            <param name="budgetId"></param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAllocationDistributor(V7.Model.Budget.DistributorListParam)">
            <summary>
            
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetAllocatationBudgetBySource(V7.Model.Budget.BudgetAllocationSourceParam)">
            <summary>
            Get Budget Source
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAlocationSourceById(V7.Model.Budget.BudgetAllocationSourceByIDParam)">
            <summary>
            Get Budget Allocation Source by Id
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAlocationById(System.Int32)">
            <summary>
            Get data by id budget allocation
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetApprovalLandingPage(V7.Model.Budget.budgetApprovalLPParam)">
            <summary>
            Get Budget Approval Listing with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetApprovalDistributor(V7.Model.Budget.DistributorListParam)">
            <summary>
            Get Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetApprovalEntity">
            <summary>
            Get Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetApprovalChannel">
            <summary>
            Get Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.BudgetApprovalApprove(V7.Model.Budget.BudgetApprovalApproveParam)">
            <summary>
            Approve Budget by ID
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.BudgetApprovalUnapprove(V7.Model.Budget.BudgetApprovalUnapproveParam)">
            <summary>
            Approve Budget by ID
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAssignmentEntity">
            <summary>
            Get Entity List
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAssignmentDistributor(V7.Model.Budget.DistributorListParam)">
            <summary>
            Get distributor list
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAssignmentWithPagination(V7.Model.Budget.BudgetAssignmentListParam)">
            <summary>
            Get Budget Assignment with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetAssignmentAllocation(V7.Model.Budget.BudgetAssignmentAllocationParam)">
            <summary>
            Get Budget Assignment Allocation
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.CreateBudgetAssignment(V7.Model.Budget.BudgetAssignmentCreateParam)">
            <summary>
            Save Budget Assignment
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.UpateBudgetAssignment(V7.Model.Budget.BudgetAssignmentUpdateParam)">
            <summary>
            Update Budget Assignment
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetAssignmentById(System.Int32)">
            <summary>
            Get data assignment by id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Repositories.Contracts.IBudgetMasterRepository,Repositories.Contracts.IBudgetApprovalRepository,Repositories.Contracts.IBudgetHistoryRepository,Repositories.Contracts.IBudgetConversionRateRepo,Repositories.Contracts.IUploadRepo)">
            <summary>
            Controller Init
            </summary>
            <param name="config"></param>
            <param name="repoBudgetMaster"></param>
            <param name="repoBudgetApproval"></param>
            <param name="repoBudgetHistory"></param>
            <param name="repoBudgetConversionRate"></param>
            <param name="repoUpload"></param>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetHistoryLandingPage(V7.Model.Budget.budgetHistoryLPParam)">
            <summary>
            Get Budget History Listing with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetHistoryDistributor(V7.Model.Budget.DistributorListParam)">
            <summary>
            Get Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetHistoryEntity">
            <summary>
            Get Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetWithPagination(V7.Model.Budget.budgetMasterLPParam)">
            <summary>
            Get Budget Master List with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetMasterEntity">
            <summary>
            Get Entity for Budget Master Menu
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetMasterDistributor(V7.Model.Budget.DistributorListParam)">
            <summary>
            Get  distributor for Budget Master Menu
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetMasterCategory">
            <summary>
            Get category for Budget Master Menu
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetMasterByID(System.Int32)">
            <summary>
            Get Budget Master by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.CreateBudgetMaster(V7.Model.Budget.BudgetMasterSaveParam)">
            <summary>
            Create Budget Master
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.UpdateBudgetMaster(V7.Model.Budget.BudgetMasterUpdateParam)">
            <summary>
            Update Budget Master
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetPSInputLP(V7.Model.Budget.budgetPSInputParam)">
            <summary>
            Get Budget PS Value Listing with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetPSInputUpload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            upload budget ss conversion rate file
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetPSInputFilterList">
            <summary>
            get all filter list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetPSInputTemplate(V7.Model.Budget.budgetPSInputParam)">
            <summary>
            Get Budget PS Input template with ref
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetSSConversionrateLP(V7.Model.Budget.budgetConversionRateLPParam)">
            <summary>
            Get Budget SS Conversion Listing with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetSSConversionrateUpload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            upload budget ss conversion rate file
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetSSConversionrateChannnelList">
            <summary>
            get active channel list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetSSConversionrateSubChannnelList(System.Int32[])">
            <summary>
            Get Sub Channel List
            </summary>
            <param name="channelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetSSConversionrateGrpBrandList">
            <summary>
            Get active group brand list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetssvolumeLP(V7.Model.Budget.budgetVolumeLPParam)">
            <summary>
            Get Budget SS volume with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetssvolume(V7.Model.Budget.budgetVolumeLPParam)">
            <summary>
            Get data for template include region
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetssvolumeUpload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            upload budget SS Volume file
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetSSvolumeRegionList">
            <summary>
            get active region list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetssvolumeChannnelList">
            <summary>
            get active channel list (follow mapping profile-channel)
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetSSvolumeSubChannnelList(System.Int32[])">
            <summary>
            get active sub channel list (0=ALL)
            </summary>
            <param name="channelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetssvolumeGrpBrandList">
            <summary>
            Get active group brand list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetSSvolumeAccountList(System.Int32[])">
            <summary>
            Get active account list by subChannel (0=ALL)
            </summary>
            <param name="subChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetSSvolumeSubAccountList(System.Int32[])">
            <summary>
            Get active sub account list by account (0=ALL)
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.SetBudgetTTConsoleCreate(V7.Model.Budget.ttConsoleCreateParam)">
            <summary>
            Budget TT Console creation
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.SetBudgetTTConsoleUpdate(V7.Model.Budget.ttConsoleUpdateParam)">
            <summary>
            Budget TT Console update
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.getBudgetTTConsoleById(System.Int32)">
            <summary>
            Get budget ttconsole by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetTTConsoleLP(V7.Model.Budget.ttConsoleLPParam)">
            <summary>
            Get Budget TT Console Listing with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetTTConsoleHistory(V7.Model.Budget.ttConsoleLPParam)">
            <summary>
            Get Budget TT Console History
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetTTConsoleTemplate(V7.Model.Budget.ttConsoleLPParam)">
            <summary>
            Get Budget TT Console template with ref
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetTTConsoleUploadRC(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            upload budget TT Console RC file
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetBudgetTTConsoleUploadDC(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            upload budget TT Console DC file
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleChannnelList">
            <summary>
            get active channel list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleSubChannnelList(System.Int32[])">
            <summary>
            get active sub channel list (0=ALL)
            </summary>
            <param name="channelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleGrpBrandList">
            <summary>
            Get active group brand list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleAccountList(System.Int32[])">
            <summary>
            Get active account list by subChannel (0=ALL)
            </summary>
            <param name="subChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleSubAccountList(System.Int32[])">
            <summary>
            Get active sub account list by account (0=ALL)
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleDistributorList">
            <summary>
            Get active distributor list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsolesubActivityTypeList(System.Int32[])">
            <summary>
            Get sub activity type  list
            </summary>
            <param name="categoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleActivityList(System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Get active activity list
            </summary>
            <param name="subActivityTypeId"></param>
            <param name="categoryId"></param>
            <param name="subCategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleSubActivityList(System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Get active subactivity list
            </summary>
            <param name="subActivityTypeId"></param>
            <param name="subCategoryId"></param>
            <param name="activityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleCategoryList">
            <summary>
            Get active category list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetController.GetttconsoleSubCategoryList(System.Int32[],System.Int32[])">
            <summary>
            Get Active Sub Category
            </summary>
            <param name="categoryId"></param>
            <param name="subActivityTypeId"></param>
            <returns></returns>
        </member>
        <member name="T:V7.Controllers.Budget.BudgetV2Controller">
            <summary>
            Promo Controller
            </summary>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.GetBudgetV2ApprovalRequest(V7.Model.BudgetV2ListParam)">
            <summary>
            Budget Approval Landing
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.GetBudgetV2ApprovalRequestReport(V7.Model.BudgetV2ReportParam)">
            <summary>
            Budget Approval download report
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.GetBudgetV2ApprovalRequestData(V7.Model.BudgetV2ReportParam)">
            <summary>
            Get budget approval request data + batchid for sending email
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.GetBudgetV2ApprovalRequestDownload(V7.Model.BudgetApprovalV2DownloadParam)">
            <summary>
             Get budget approval request data for download (using batchid if available)
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.BudgetV2ApprovalRequestFilter">
            <summary>
            Budget approval filter
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.GetBudgetDeploymentLogs(System.String)">
            <summary>
            Get Budget deployemnt Log
            date: yyyyMMdd
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.SetBudgetV2ApprovalRequestApprove(V7.Model.BudgetV2RequestApprove)">
            <summary>
            Update after user click button approve via email (no auth)
            </summary>
            <param name="promo"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.SetBudgetV2ApprovalRequestReject(V7.Model.BudgetV2RequestApprove)">
            <summary>
            Update after user click button reject via email (no auth)
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.GetBudgetApprovalBatchId(System.String)">
            <summary>
            Get Budget Approval by batchid
            </summary>
            <param name="batchId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.GetBudgetV2DeploymentRequest(V7.Model.BudgetV2DeployListParam)">
            <summary>
            Budget Deployment Landing
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.SetBudgetV2DeploymentRequest(V7.Model.BudgetV2PromoArrayIntType)">
            <summary>
            Set budget deployment request, returning batchid
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.SetBudgetV2DeploymentBatchid(V7.Model.BudgetV2DeployBatchParam)">
            <summary>
            Set deployment by batch id, returnin promo and approval data email
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Budget.BudgetV2Controller.BudgetV2DeploymentFilter">
            <summary>
            Budget deployment filter
            </summary>
            <returns></returns>
        </member>
        <member name="T:V7.Controllers.Budget.ReferencesController">
            <summary>
            Budget Handle Controller
            </summary>
        </member>
        <member name="M:V7.Controllers.Budget.ReferencesController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Repositories.Contracts.IReferencesRepository)">
            <summary>
            Controller Init
            </summary>
            <param name="config"></param>
            <param name="repo"></param>
        </member>
        <member name="M:V7.Controllers.Budget.ReferencesController.GetReferencesDistributor">
            <summary>
            Get Distributor List by profile id (token)
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetConfigDropdown(System.String)">
            <summary>
            Get Configuration by category
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetAVersion">
            <summary>
            Get API version
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetConfigRoiList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get List Config ROI CR
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetCategory">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetSubCategoryROI(System.Int32)">
            <summary>
            Get List Sub Category by Category ID
            </summary>
            <param name="CategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetActivityROI(System.Int32)">
            <summary>
            Get List Activity by Sub Category ID
            </summary>
            <param name="SubCategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.CreateConfigRoi(V7.Model.Configuration.CRandROIParam)">
            <summary>
            Create Config ROI CR
            </summary>
            <param name="crroi"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.DeleteConfigRoi(V7.Model.Configuration.ConfigRoiParamDelete)">
            <summary>
             Delete Config ROI CR
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetConfigLatePromo">
            <summary>
            Get Data Config Late Promo Creation
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.UpdateLatePromoCreation(V7.Model.Configuration.LatePromoCreationParam)">
            <summary>
            Update Late Promo Creation
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.SetMechanisminputmethod(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload Data mechanisme input method
            </summary>
            <param name="reminderType"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetMechanismInputMethodLP">
            <summary>
            Get mechanisme input method
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetPromoCalculator(System.Int32,System.Int32)">
            <summary>
            Get Promo Calculator Config LP
            </summary>
            <param name="mainActivityId"></param>
            <param name="channelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetPromoCalculatorFilter">
            <summary>
            for filtering LP
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetPromoCalculatorChannel">
            <summary>
            Get channel list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetPromoCalculatorById(System.Int32,System.Int32)">
            <summary>
            Get Promo Calculator Config by mainActivityId
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetPromoCalculatorFilterCoverage">
            <summary>
            Get Promo Calculator Config Filter and Coverage
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.SetPromoCalculatorCreate(V7.Model.Configuration.ConfigPromoCalculatorCreateParam)">
            <summary>
            Create Promo Calculator Config 
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.SetPromoCalculatorUpdate(V7.Model.Configuration.ConfigPromoCalculatorUpdateParam)">
            <summary>
            Set Promo Calculator Config Update
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetPromoInitiatorReminderList">
            <summary>
            Get Data Configuration Promo Initiator Reminder
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.UpdateConfigReminderPromoInitiator(V7.Model.Configuration.PromoInitiatorParam)">
            <summary>
            Update Configuration Promo Initiator Reminder
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetConfigPromoItems(System.String)">
            <summary>
            Get Data Configuration Promo Item
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetConfigPromoItemsHistory(System.Int32,System.String)">
            <summary>
            Get Data Configuration Promo Item History
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.CreateConfigRoi(V7.Model.Configuration.UpdatePromoItemParam)">
            <summary>
            Update Config Promo Item 
            </summary>
            <param name="promoItem"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetByReminderType(System.Int32)">
            <summary>
            Get Data Configuration Reminder by Type
            </summary>
            <param name="reminderType"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.UpdateReminder(V7.Model.Configuration.ReminderParam)">
            <summary>
            Update Configuration Reminder
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Configuration.ConfigController.GetTimerTarget">
            <summary>
            Run task again after 5am
            </summary>
            <param name="reminderType"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetChannelListDashboardApprover">
            <summary>
            Get List Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringApproverforDashboardApprover(System.DateTime,System.DateTime)">
            <summary>
            Dashboard Kpi Scoring Approver, Old API = "kpiscoring/approver"
            </summary>
            <param name="promostart"></param>
            <param name="promoend"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringStandingforDashboardApprover(System.DateTime,System.DateTime)">
            <summary>
            Dashboard summary KPI Scoring Standing, Old API = "kpiscoring/standing"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringDashboardforDashboardCreator(System.DateTime,System.DateTime,System.String,System.Boolean,System.DateTime)">
            <summary>
            Dashboard summary KPI Scoring Dashboard, Old API = "kpiscoring/dashboard"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <param name="userid"></param>
            <param name="period_monitoring"></param>
            <param name="date_monitoring"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringLeaguesforDashboardCreator(System.DateTime,System.DateTime,System.String)">
            <summary>
            Dashboard summary KPI Scoring Leagues, Old API = "kpiscoring/league"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <param name="ChannelDesc"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringStandingforDashboardCreator(System.DateTime,System.DateTime)">
            <summary>
            Dashboard summary KPI Scoring Standing, Old API = "kpiscoring/standing"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDashboardMain(System.DateTime,System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32,System.String)">
            <summary>
            Dashboard main, Old API = "api/dashboard/main"
            </summary>
            <param name="period"></param>
            <param name="entityId"></param>
            <param name="channelId"></param>
            <param name="accountId"></param>
            <param name="categoryId"></param>
            <param name="subcategoryId"></param>
            <param name="viewmode"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetAllChannelByAccessforDashboardMain">
            <summary>
            Get List channel, Old API = "channel/byaccess/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetAllAccountByAccessDashboardMain(System.Int32)">
            <summary>
            Get List channel, Old API = "account/byaccess/"
            </summary>
            <param name="channelid"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDropDownList">
            <summary>
            Get Dropdown List, Old API = "users/dropdown"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetUserNotifications">
            <summary>
            Dashboard Notifications, Old API = "dashboard/notifications"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDNMonitoring(V7.Model.Dashboard.DashboardMainDNMonitoringParam)">
            <summary>
            Dashboard DN monitoring, Old API = "dashboard/dnmonitoring"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDashboardTrend(System.DateTime,System.Int32,System.Int32[],System.Int32[])">
            <summary>
            Dashboard Promo Trend, Old API = "api/dashboard/trend"
            </summary>
            <param name="period"></param>
            <param name="entityId"></param>
            <param name="channelId"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetSpendPerformance(System.DateTime,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Dashboard Promo Spend, Old API = "dashboard/spend"
            </summary>
            <param name="periode"></param>
            <param name="entity"></param>
            <param name="channel"></param>
            <param name="account"></param>
            <param name="subcategory"></param>
            <param name="viewmode"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetSpendPerformance(System.DateTime,System.String)">
            <summary>
            Dashboard Promo Submission, Old API = "dashboard/promosubmission/"
            </summary>
            <param name="periode"></param>
            <param name="viewmode"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetPromoApprovalPerformance(System.DateTime,System.String)">
            <summary>
            Dashboard Promo Approval, Old API = "dashboard/promoapproval"
            </summary>
            <param name="periode"></param>
            <param name="viewmode"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.SearchDesktop(System.String)">
            <summary>
            This will return refID from debet note and promo
            </summary>
            <remarks>
            </remarks>
            <param name="keyword">Key to search</param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDNOverBudgetToBeSettled">
            <summary>
            Dashboard DN OverBudget tobe Settled, Old API = "debetnote/overbudget/tobesettled"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDNListbyPromoId(System.Int32)">
            <summary>
            Dashboard Main  DN OverBudget List by PromoID, Old API = "debetnote/dnlistbypromoid"
            </summary>
            <param name="promoId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDashboarPromodCalendar(System.Int32,System.String)">
            <summary>
            Get Dashboard Promo Calendar, Old API = "dashboard/calendar"
            </summary>
            <param name="promoPlanId"></param>
            <param name="activity_desc"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetEntityForDashboardPromoCalendar">
            <summary>
            Get entity dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDashboardMasterChannelbyAccesses">
            <summary>
            Get List channel, Old API = "channel/byaccess/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetDashboardMasterAccountbyAccesses(System.Int32)">
            <summary>
            Get List channel, Old API = "account/byaccess/"
            </summary>
            <param name="channelid"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetSubCategoryforDashboardPromoCalendars">
            <summary>
            Get List Sub Category, Old API = "subcategory/getbyuseraccess"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetCategoryListforDashboardPromoCalendar">
            <summary>
            Get category dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoring(System.DateTime,System.DateTime)">
            <summary>
            Dashboard summary, Old API = "kpiscoring/all"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringApprover(System.DateTime,System.DateTime)">
            <summary>
            Dashboard summary Approver, Old API = "kpiscoring/approver"
            </summary>
            <param name="promostart"></param>
            <param name="promoend"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringDashboard(System.DateTime,System.DateTime,System.Boolean,System.DateTime)">
            <summary>
            Dashboard summary KPI Scoring Dashboard, Old API = "kpiscoring/dashboard"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringDetail(System.DateTime,System.DateTime,System.Boolean,System.DateTime)">
            <summary>
            Dashboard summary KPI Scoring Detail, Old API = "kpiscoreboard/detail/all"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <param name="period_monitoring"></param>
            <param name="date_monitoring"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringLeagues(System.DateTime,System.DateTime,System.String)">
            <summary>
            Dashboard summary KPI Scoring Leagues, Old API = "kpiscoring/league"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <param name="ChannelDesc"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringStanding(System.DateTime,System.DateTime)">
            <summary>
            Dashboard summary KPI Scoring Standing, Old API = "kpiscoring/standing"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Dashboard.DashboardController.GetKPIScoringSummaries(System.DateTime,System.DateTime)">
            <summary>
            Dashboard summary KPI Scoring Summaries, Old API = "kpiscoring/summaries"
            </summary>
            <param name="create_from"></param>
            <param name="create_to"></param>
            <returns></returns>
        </member>
        <member name="T:V7.Controllers.DebitNote.DebitNoteController">
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DN Creation
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DN Manual Assignment
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DebitNote Controller
            </summary>
            <summary>
            DebitNote Controller
            </summary>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNStatusConfirmPaid(V7.Model.DebitNote.DNGetStatusParam)">
            <summary>
            Get DN status "invoice", Old API = "debetnote/confirmpaid/ [GET]"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNConfirmPaid(Repositories.Entities.Models.DNConfirmPaid.DNChangeStatusConfirmPaid)">
            <summary>
            DN change status to "Confirm Paid"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetInvoiceList(System.String,System.Int32,System.Int32)">
            <summary>
            Get DN Invoice List 
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetInvoiceById(System.Int32)">
            <summary>
            Get DN Invoice by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNByStatusforInvoiceTaxLevel(V7.Model.DebitNote.DNGetStatusParamwithTaxLevel)">
            <summary>
            Get DN Invoice TaxLevel by status "ready to invoice"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.CreateInvoice(V7.Model.DebitNote.CreateInvoiceParam)">
            <summary>
            Create DN Invoice
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.UpdateInvoice(V7.Model.DebitNote.UpdateInvoiceParam)">
            <summary>
            Update DN Invoice
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNRejectCreateInvoice(V7.Model.DebitNote.DNRejectParam)">
            <summary>
            DN Invoice Notification by Danone Reject
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeletePromoAttachmentDNCreateInvoice(System.Int32,System.String)">
            <summary>
            Remove promo attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNGetbyIdforCreateInvoice(System.Int32)">
            <summary>
            Get DN by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityListDNCreateInvoice">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNStatusReadytoInvoice(V7.Model.DebitNote.DNGetStatusParam)">
            <summary>
            Get DN status Ready to invoice 
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetPrintInvoicebyId(System.Int32)">
            <summary>
            Get DN Invoice Print by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetTaxLevelList">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNChangeStatusReadytoInvoice(Repositories.Entities.Models.DN.DNChangeStatusReadytoInvoice)">
            <summary>
            DN change status to "Ready to Invoice"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNFilterforCreatedInvoice(V7.Model.DebitNote.DNInvoiceFilterParam)">
            <summary>
            DN Filter for Validation by Finance, Old API = "api/debetnote/filter/validatebyfinance/{status}/{entity}/{userid}/{TaxLevel}"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributorforCreateInvoice(System.Int32)">
            <summary>
            Get distributor dropdown data base on entity id
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetByIdforDNCreateInvoice(System.String)">
            <summary>
            Get Data User Profile by Id for DN Create Invoice
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetCategoryDropdownListforDNCreateInvoice">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNListLandingPage(V7.Model.DebitNote.DNLandingPageParam)">
            <summary>
            Get DebitNote Landing Page, Old API = "debetnote_p/list/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDebetNoteById(System.Int32)">
            <summary>
            Get DN by Id, Old API = "debetnote/getbyId"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.CancelDN(Repositories.Entities.Models.DNCancelBody)">
            <summary>
            DN Cancel, Old API = "debetnote/cancel"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetAttributeByUser">
            <summary>
            Get attribute by user, Old API = "master/getAttributeByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributorEntityByUserId">
            <summary>
            Get attribute by user, Old API = "master/getDistEntityByUser/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSellingPointByUser">
            <summary>
            Get selling point by user, Old API = "sellingpoint/getByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetTaxLevel">
            <summary>
            Get TaxLevel for DN Creation, Old API = "mapmaterial/all"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNCreationTaxlevelByEntity(System.String,System.String)">
            <summary>
            Get TaxLevel for DN by Entity Id, Old API = "dncreation/taxlevel?entityid"
            </summary>
            <param name="entityid"></param>
            <param name="whtType">Non WHT Object, WHT Deduct, WHT No Deduct or Empty</param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.CreateDN(Repositories.Entities.Models.DNCreationParam)">
            <summary>
            Create DN, Old API = "debetnote/store"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.UpdateDN(Repositories.Entities.Models.DNCreationParam)">
            <summary>
            Update DN, Old API = "debetnote/update"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.CreateDNAttachment(Repositories.Entities.Models.DNAttachmentBody)">
            <summary>
            DN post attachment, Old API = "dnattachment/store"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeleteDNAttachment(Repositories.Entities.Models.DNAttachmentBody)">
            <summary>
            DN delete attachment , Old API = "dnattachment/delete"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNPrint(System.Int32)">
            <summary>
            DN Print", Old API = "debetnote/print/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityDNCreation">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSubAccountDNCreation">
            <summary>
            Get List Sub Account
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetChannelListDNCreation">
            <summary>
            Get List Channel for DN Creation
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetApprovedPromoforDNCreation(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            DN list approved promo for DN Creation, old API = "promo/getPromoForDn"
            </summary>
            <param name="periode"></param>
            <param name="entity"></param>
            <param name="channel"></param>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNCreationGetWHTType(System.Int32)">
            <summary>
            Get WHTType for DN Creation"
            </summary>
            <param name="promoId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNHObyId(System.Int32)">
            <summary>
            Get DN HO by Id, Old API = "debetnote/getbyId"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.CancelDNHO(Repositories.Entities.Models.DNCancelBody)">
            <summary>
            DN Cancel HO, Old API = "debetnote/cancel"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetAttributeByUserDNHO">
            <summary>
            Get attribute by user, Old API = "master/getAttributeByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributorEntityByUserIdDNHO">
            <summary>
            Get attribute by user, Old API = "master/getDistEntityByUser/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSellingPointByUserDNHO">
            <summary>
            Get selling point by user, Old API = "sellingpoint/getByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNHOReport(V7.Model.DebitNote.DebitNoteReportParam)">
            <summary>
            Get DN HO Report
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.CreateDNHO(Repositories.Entities.Models.DNCreationParam)">
            <summary>
            Create DN, Old API = "debetnote/store"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.UpdateDNHO(Repositories.Entities.Models.DNCreationParam)">
            <summary>
            Update DN, Old API = "debetnote/update"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.CreateDNHOAttachment(Repositories.Entities.Models.DNAttachmentBody)">
            <summary>
            DN post attachment, Old API = "dnattachment/store"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeleteDNHOAttachment(Repositories.Entities.Models.DNAttachmentBody)">
            <summary>
            DN delete attachment , Old API = "dnattachment/delete"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNHOPrint(System.Int32)">
            <summary>
            DN Print", Old API = "debetnote/print/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityDNCreationHO">
            <summary>
            Get List Entity for DN Creation HO
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSubAccountDNCreationHO">
            <summary>
            Get List Sub Account for DN Creation HO
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetChannelListDNCreationHO">
            <summary>
            Get List Channel for DN Creation HO
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNCreationHOGetWHTType(System.Int32)">
            <summary>
            Get WHTType for DN Creation HO"
            </summary>
            <param name="promoId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityListDNInvoiceNotification">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributorListDNInvoiceNotification(V7.Model.DebitNote.DNDistributorGlobalParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeletePromoAttachmentDNInvoiceNotification(System.Int32,System.String)">
            <summary>
            Remove promo attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdInvoiceNotification(System.Int32)">
            <summary>
            Get DN by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNRejectInvoiceNotification(V7.Model.DebitNote.DNRejectParam)">
            <summary>
            DN Invoice Notification by Danone Reject
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNChangeStatusReadytoInvoice(V7.Model.DebitNote.DNChangeStatusParam)">
            <summary>
            DN change status from Ready to Invoice, Old API = "[POST]api/debetnote/ready_to_invoice"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNValidatebyDanone(V7.Model.DebitNote.DebitNoteSendtoParam)">
            <summary>
            Get DN by status "validate_by_danone", Old API = "[GET]debetnote/ready_to_invoice/{userid}/{entity}/{distributor}"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.AssignDNforListingOverBudget(Repositories.Entities.Models.DN.DNAssignParam)">
            <summary>
            DN Listing Over Budget assign, Old API = "debetnote/assigndn"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetApprovedPromoforDNListingOverBudget(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            DN list approved promo for DN Listing Over Budget, old API = "promo/getPromoForDn"
            </summary>
            <param name="periode"></param>
            <param name="entity"></param>
            <param name="channel"></param>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdforDNListingOverBudget(System.Int32)">
            <summary>
            Get DN by Id for DN Listing Over Budget, Old API = "debetnote/getbyId"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNOverBudgetList(V7.Model.DebitNote.DNReAssignListParam)">
            <summary>
            DN lisingt over budget, old API = "debetnote/listOverBudgetByUser"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetAttributeByUserforDNListingOverBudget">
            <summary>
            Get attribute by user, Old API = "master/getAttributeByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNListingPromoDistributorLandingPage(V7.Model.DebitNote.DNListingPromoDistributorRequestParam)">
            <summary>
            Get Listing Promo Reporting with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityListDNListingPromoDistributor">
            <summary>
            Get List Entity for DN Listing promo distributor
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributorListDNListingPromoDistributor(V7.Model.FinanceReport.FinListingPromoReportingDistributorListParam)">
            <summary>
            Get List Distributor for DN listing promo distributor 
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetChannelListDNPromoListingDistributor">
            <summary>
            Get List Channel for DN Listing promo Distributor
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetUserProfileById(System.String)">
            <summary>
            Get Data User Profile by Id for DN Listing Promo Distributor
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetCategoryDropdownList">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdforDNManualAssignment(System.Int32)">
            <summary>
            Get DN by Id for DN Manual Assignment, Old API = "debetnote/getbyId"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.AssignDNforDNManualAssignment(Repositories.Entities.Models.DN.DNAssignParam)">
            <summary>
            DN Manual Assignment post, Old API = "debetnote/assigndn"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetApprovedPromoforDNManualAssignment(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            DN list approved promo for DN Manual Assignment, old API = "promo/getPromoForDn"
            </summary>
            <param name="periode"></param>
            <param name="entity"></param>
            <param name="channel"></param>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetAttributeByUserforDNManualAssignment">
            <summary>
            Get attribute by user, Old API = "master/getAttributeByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNManualAssignList">
            <summary>
            Get DN Manual Assignment List, Old API = "debetnote/dnmanualassignlist"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.ForwardAssignment(V7.Model.DebitNote.DNAssignPromoRequestParam)">
            <summary>
            DN Manual Assignment Promo, Old API = "debetnote/assignpromo_request"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSubAccountList">
            <summary>
            Get sub account list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetUserByIDMultiPrint(System.Int32)">
            <summary>
            Get user by ID
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNListLandingPageMultiPrint(V7.Model.DebitNote.DNLandingPageParam)">
            <summary>
            DN list multiprint, old API = "debetnote/list"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetApprovedPromoforDN(V7.Model.DebitNote.DNApprovedPromoforMultiprintDNParam)">
            <summary>
            DN list multiprint approved promo for DN, old API = "promo/getPromoForDn"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNMultiPrint(System.Int32)">
            <summary>
            DN multiprint, old API = "debetnote/print/"
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityDNMultiprintPromo">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetPromoReconDNMultiprintPromo(System.Int32)">
            <summary>
            Get Promo Reconciliation by Id, Old API = "promov3/getrecon"
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetPromoMultiprint(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            DN list Promo Multiprint, old API = " promo/multiprint/"
            </summary>
            <param name="period"></param>
            <param name="entityId"></param>
            <param name="distributorId"></param>
            <param name="BudgetParent"></param>
            <param name="channelId"></param>
            <param name="cancelstatus"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetPromoByConditionsByStatus(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Promo by Status for DN Multiprint Promo, old API = "promo/bystatus/"
            </summary>
            <param name="period"></param>
            <param name="entityId"></param>
            <param name="distributorId"></param>
            <param name="BudgetParent"></param>
            <param name="channelId"></param>
            <param name="cancelstatus"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetUserProfileByIdforDNMultiprintPromo(System.String)">
            <summary>
            Get Data User Profile by Id, Old API = "user/getbyprimarykey/"
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNUpdateOverBudget(System.Int32)">
            <summary>
            DN delete attachment , Old API = "debetnote/dnupdateoverbudget"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNOverBudgetList">
            <summary>
            DN  Refreshlist, old API = debetnote/listrefreshoverbudget"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetFinPromoDisplayLandingPage(V7.Model.DebitNote.DNPromoDisplayRequestParam)">
            <summary>
            Get Listing Promo Display with pagination, Old API = "promov3/display/distributor"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetPromoReconPromoDisplay(System.Int32)">
            <summary>
            Get Promo Reconciliation by Id, Old API = "promov3/getrecon"
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNPromoDisplaybyId(System.Int32)">
            <summary>
            Get Promo by Promo Id, Old API = "promov3/getbyprimaryid"
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityDNPromoDisplay">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.AssignDN(Repositories.Entities.Models.DN.DNAssignParam)">
            <summary>
            DN Reassignment post, Old API = "debetnote/assigndn"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetApprovedPromoByInitiator(V7.Model.DebitNote.GetApprovedPromoforbyInitiatorDNParam)">
            <summary>
            Get DN approved promo by initiator, old API = "promo/getPromoAprrovalForDnByInitiator/"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetAttributeByUserforDNAssignment">
            <summary>
            Get attribute by user, Old API = "master/getAttributeByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNAssignList">
            <summary>
            DN list assign, old API = "debetnoteassign/list/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNIdforReassignment(System.Int32)">
            <summary>
            Get DN by Id, Old API = "debetnote/getbyId"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.AssignDNforReassignmentFinance(Repositories.Entities.Models.DN.DNAssignParam)">
            <summary>
            DN Reassignment post, Old API = "debetnote/assigndn"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetAttributeByUserforDNARessignmentFinance">
            <summary>
            Get attribute by user, Old API = "master/getAttributeByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdforDNReassignmentFinance(System.Int32)">
            <summary>
            Get DN by Id for DN Reassignent Finance, Old API = "debetnote/getbyId"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.ForwardAssignmentforDNReassignmentFinance(V7.Model.DebitNote.DNAssignPromoRequestParam)">
            <summary>
            DN reAssignment Finance Promo, Old API = "debetnote/assignpromo_request"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetApprovedPromoforDNAssignmentFinance(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            DN list approved promo for DN reAssignment Finance, old API = "promo/getPromoForDn"
            </summary>
            <param name="periode"></param>
            <param name="entityId"></param>
            <param name="channelId"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNAssignListFinance">
            <summary>
            DN list reassignment Finance, old API = "debetnoteassign/list/finance"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeletePromoAttachmentDNReceivedandApproved(System.Int32,System.String)">
            <summary>
            Remove promo attachment
            </summary>
            <param name="PromoId"></param>
            <param name="DocLink"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNChangeStatusDistributorMultiApproval(V7.Model.DebitNote.DNChangeSingleStatusParam)">
            <summary>
            DN change status distributor multi approval
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdReceivedAndApproval(System.Int32)">
            <summary>
            Get DN by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNMultiApprovalParalel(V7.Model.DebitNote.DNReceivedAndApproveMultiParam)">
            <summary>
            DN change status distributor multi approval, Old API = "debetnote/dnapproval"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNValidateByDistributorHO">
            <summary>
            Get DN validate by distributor ho, Old API = "debetnote/validate_by_dist_ho"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNFilterReceivedandApprovedbyHO(V7.Model.DebitNote.DNFilterParam)">
            <summary>
            DN Filter for Validation by HO, Old API = "debetnote/filter/{status}/{entity}/{userid}/{TaxLevel}"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityReceivedbyDanone">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributorListDNReceivedbyDanone(V7.Model.DebitNote.DNDistributorGlobalParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeletePromoAttachmentDNReceivedbyDanone(System.Int32,System.String)">
            <summary>
            Remove promo attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNReceivedDanonebyId(System.Int32)">
            <summary>
            Get DN by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNReceivedbyDanoneStatus(V7.Model.DebitNote.DNValidateByDistributorHOParam)">
            <summary>
            Get DN validate by distributor ho
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNRecivedbyDanoneApproval(Repositories.Entities.Models.DNReceivedbyDanone.DNReceivedbyDanoneApprovalParam)">
            <summary>
            DN Received by Danone approval
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.RejectDNReceivedbyDanone(V7.Model.DebitNote.DNRejectParam)">
            <summary>
            DN Received by Danone Reject
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNReceivedbyDanoneChangeStatus(V7.Model.DebitNote.DNChangeSingleStatusParam)">
            <summary>
            DN change status received by danone from HO, 
            Old API = '[GET]api/debetnote/received_by_danone'
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNCancelforDNSendback(Repositories.Entities.Models.DNCancelBody)">
            <summary>
            DN Cancel, Old API = "debetnote/cancel", *param userid tidak perlu diisi
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.CreateDNAttachmentSendback(Repositories.Entities.Models.DNAttachmentBody)">
            <summary>
            DN post attachment, Old API = "dnattachment/store/sendback"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeleteDNAttachmentDNSendback(Repositories.Entities.Models.DNAttachmentBody)">
            <summary>
            DN delete attachment , Old API = "dnattachment/delete"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNPrintSendback(System.Int32)">
            <summary>
            DN Print for DN sendback, Old API = "debetnote/print/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetAttributeByUserDNSendback">
            <summary>
            Get attribute by user, Old API = "master/getAttributeByUser"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNSendbackDistributor(System.String,System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            DN Sendback Distributor list , old API = "debetnote/list/sendbackdist"
            </summary>
            <param name="periode"></param>
            <param name="entityId"></param>
            <param name="distributorId"></param>
            <param name="channelId"></param>
            <param name="accountId"></param>
            <param name="isdnmanual"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdforDNSendBack(System.Int32)">
            <summary>
            Get DN by Id, Old API = "debetnote/getbyId"
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.UpdateDNSendback(Repositories.Entities.Models.DNCreationParam)">
            <summary>
            DN Update Sendback, Old API = "debetnote/update/sendback"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeletePromoAttachmentForSendtoDanone(System.Int32,System.String)">
            <summary>
            Remove promo attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNChangeStatusSendtoDanone(V7.Model.DebitNote.DNChangeSingleStatusParam)">
            <summary>
            DN change status from distributor to HO
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdforSendtoDanone(System.Int32)">
            <summary>
            Get DN by Id for Send to Danone
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDebetNoteByStatusValidatebyDistributorHO(V7.Model.DebitNote.DebitNoteSendtoParam)">
            <summary>
            Get DN send to Danone
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.RejectDNSendtoDanone(V7.Model.DebitNote.DNRejectParam)">
            <summary>
             DN reject send to Danone
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNSendtoHO(V7.Model.DebitNote.DebitNoteSendtoParam)">
            <summary>
            Get DN send to HO
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeletePromoAttachmentForSendtoHO(System.Int32,System.String)">
            <summary>
            Remove promo attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNChangeStatusDistributortoHO(V7.Model.DebitNote.DNChangeSingleStatusParam)">
            <summary>
            DN change status from distributor to HO
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSuratPengantarHOtoDanonebyId(System.Int32)">
            <summary>
            Get surat jalan dan tanda terima to Danone by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSuratPengantarHOtoDanoneList(System.String)">
            <summary>
            Get surat jalan dan tanda terima to Danone semua data
            </summary>
            <param name="senddate"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSuratPengantarById(System.Int32)">
            <summary>
            Get surat jalan dan tanda terima to HO by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetSuratPengantarList(System.String)">
            <summary>
            Get surat jalan dan tanda terima to  HO semua data
            </summary>
            <param name="senddate"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.SearchDNByRefid(System.String)">
            <summary>
            Search DN by RefId, Old API = "searchDNbyRefid/post"
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.SaveDNAttachment(Repositories.Entities.Models.DNCreateAttachmentParam)">
            <summary>
            DN upload attachment, Old API = "dnattachment/store".
            Parameter CreateOn and CreateBy tidak perlu diisi
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNListAttachment(V7.Model.DebitNote.DNGetListAttachmentParam)">
            <summary>
            Get List DN Attachment, Old API = "debetnote/listattach"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNUpload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload DN, Old API = "api/debetnote/create_by_batch"
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNUploadFilter(V7.Model.DebitNote.DNFilterParam)">
            <summary>
            DN Filter for Upload, Old API = "debetnote/filter/{status}/{entity}/{userid}/{TaxLevel}"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNFilterUploadFaktur(V7.Model.DebitNote.DNFilterParam)">
            <summary>
            DN Filter for Upload Faktur, Old API = "debetnote/filter/{status}/{entity}/{userid}/{TaxLevel}"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNUploadUpdateFP(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload DN Update FP, Old API = "debetnote/create_by_batch/updatefp/{userid}"
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityValidatebyFinance">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributorListDNValidationbyFinance(V7.Model.DebitNote.DNDistributorGlobalParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeletePromoAttachmentForValidationbyFinance(System.Int32,System.String)">
            <summary>
            Remove promo attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdforValidationbyFinance(System.Int32)">
            <summary>
            Get DN by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetPromobyIdforDNValidationbyFinance(System.Int32)">
            <summary>
            Get Promo by  Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNChangeStatusValidatebyFinanceMultiApproval(V7.Model.DebitNote.DNChangeStatusParam)">
            <summary>
            DN change status validate by finance multi approval
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNValidationbyFinance(Repositories.Entities.Models.DN.DNValidationbyFinanceParam)">
            <summary>
            DN change status dn validation
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNValidationbyFinance(V7.Model.DebitNote.DNGetStatusValidateByFinanceParamwithTaxLevel)">
            <summary>
            Get DN received by danone
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNFilterValidateByFinance(V7.Model.DebitNote.DNFilterParam)">
            <summary>
            DN Filter for Validation by Finance, Old API = "api/debetnote/filter/validatebyfinance/{status}/{entity}/{userid}/{TaxLevel}"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNValidationParalelCompleteness(V7.Model.DebitNote.DNValidationCompletenessParam)">
            <summary>
            DN Validation Completeness, Old API = "debetnote/dnvalidation/completeness"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNFinanceValidationDocumentCompleteness(V7.Model.DebitNote.DNFinValidationOnDocCompletenessParam)">
            <summary>
            DN Validation by Finance on Document Completeness only
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityValidatebySales">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributorListDNValidationbySales(V7.Model.DebitNote.DNDistributorGlobalParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DeletePromoAttachmentDNValidatebySales(System.Int32,System.String)">
            <summary>
            Remove promo attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdforValidationbySales(System.Int32)">
            <summary>
            Get DN by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetPromobyIdforDNValidationbySales(System.Int32)">
            <summary>
            Get Promo by  Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNChangeStatusSalesMultiApproval(V7.Model.DebitNote.DNChangeStatusParam)">
            <summary>
            DN change status validate by finance multi approval
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNByStatusForValidateBySales(V7.Model.DebitNote.DNGetStatusParamforValidatebySales)">
            <summary>
            Get DN validate by sales
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNValidatebySalesApproval(Repositories.Entities.Models.DN.DNValidationbySalesParam)">
            <summary>
            DN validation by sales approval
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNFilterValidationbySales(V7.Model.DebitNote.DNFilterParam)">
            <summary>
            DN Filter for Validation by Sales, Old API = "api/debetnote/filter/validatebysales/{status}/{entity}/{userid}/{TaxLevel}"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNVATExpiredUpdate(V7.Model.DebitNote.DNVATExpiredUpdateParam)">
            <summary>
            DN VAT Expired Checklist Update, Old API = "debetnote/vatexpriedupdate"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDistributor(V7.Model.Budget.DistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetEntityforVATExpired">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetVATExpiredList(System.Int32,System.Int32,System.String)">
            <summary>
            DN list VAT Expired List, old API = "debetnote/vatexpired/list"
            </summary>
            <param name="entityId"></param>
            <param name="distributorId"></param>
            <param name="TaxLevel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.DNPrintforDNWorkflow(System.Int32)">
            <summary>
            DN Print", Old API = "debetnote/print/"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNbyIdforDNWorkflow(System.Int32)">
            <summary>
            Get DN by Id for DN Workflow, Old API = "debetnote/getbyId"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNWorkflow(System.String)">
            <summary>
            Get DN Workflow, Old API = "debetnoteid/workflow"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNWorkflowChange(System.String)">
            <summary>
            Get DN Workflow Change, Old API = "debetnoteid/workflow_change"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetDNWorkflowHistory(System.String)">
            <summary>
            Get DN Workflow History, Old API = debetnoteid/workflow_history"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.DebitNote.DebitNoteController.GetPromoWorkflowforDNWorkflow(System.String)">
            <summary>
            Get Promo Workflow for DN Workflow, Old API = "promo/workflow"
            </summary>
            <returns></returns>
        </member>
        <member name="T:V7.Controllers.FinanceReport.FinanceReportController">
            <summary>
            Accrual Report handler
            </summary>
            <summary>
            Report Controller
            </summary>
            <summary>
            Report DN Display handler
            </summary>
            <summary>
            DN Detail Reporting handler
            </summary>
            <summary>
            Report DN Display handler
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Investment Report handler
            </summary>
            <summary>
            Listing DN handler
            </summary>
            <summary>
            Listing Promo Reconciliation Reporting handler
            </summary>
            
            <summary>
            Listing Promo Reporting handler
            </summary>
            
            <summary>
            Matrix Approval Listing handler
            </summary>
            <summary>
            Promo approval aging Report handler
            </summary>
            <summary>
            Listing Promo Reporting handler
            </summary>
            
            <summary>
            Promo Historical Movement handler
            </summary>
            <summary>
            Promo Planniong Reporting handler
            </summary>
            
            <summary>
            Promo Submission handler
            </summary>
            
            <summary>
            SKP Validation Report handler
            </summary>
            
            <summary>
            Summary Aging Approval handler
            </summary>
            <summary>
            Report TT Control RCDC
            </summary>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetAccrualReportLandingPage(V7.Model.FinanceReport.FinAccrualReportListRequestParam)">
            <summary>
            Get Accrual Finance Report with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityAccrual">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoAccrualReportById(System.Int32)">
            <summary>
            Get list promo accrual report header by id
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoAccrualReportHeader(Repositories.Entities.Models.AccrualReportHeaderBody)">
            <summary>
            Get list promo accrual report header
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.CekInvestmentNotif(Repositories.Entities.Models.InvestmentNotifBodyFinReport)">
            <summary>
            Get list investment notification for accrual report
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetBudgetSummaryLP(V7.Model.BudgetSummaryLPParam)">
            <summary>
            Get budget summary Landing Page
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetBudgetSummary(V7.Model.BudgetSummaryParam)">
            <summary>
            Get budget summary
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetBudgetSummaryFilter">
            <summary>
            Get budget summary
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDNDetailReportingLandingPage(V7.Model.FinanceReport.FinDNDetailReportingListRequestParam)">
            <summary>
            Get DN Detail Reporting with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityDNDetailReporting">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributor(V7.Model.FinanceReport.FinDNDetailReportingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetSubAccount">
            <summary>
            Get List Sub Account
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.CekInvestmentNotifDN(Repositories.Entities.Models.InvestmentNotifBodyFinReport)">
            <summary>
            Get list investment notification for accrual report
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetCategoryDropdownListforDNDetailReporting">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDNDisplayLandingPage(V7.Model.FinanceReport.FinDNDisplayRequestParam)">
            <summary>
            Get DN Display with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDNById(System.Int32)">
            <summary>
            Get Data DN by ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityDNDisplay">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorDNDisplay(V7.Model.FinanceReport.FinDNDisplayDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetSellingPointDNDisplay">
            <summary>
            Get List Selling Point
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetTaxLevelDNDisplay">
            <summary>
            Get List Tax Level
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDNDisplayPrint(System.Int32)">
            <summary>
            Get Data DN for Print by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetFinDnReadytopayLP(V7.Model.Report.DNReadyToPayParam)">
            <summary>
            Finance Report DN Ready to pay
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetFinDnReadytopayFilter">
            <summary>
            Get Filter for DN Ready to Pay LP
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDocumentCompletenessLandingPage(V7.Model.FinanceReport.FinDocumentCompletenessRequestParam)">
            <summary>
            Get Matrix Approval Listing Report with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityDocumentCompleteness">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorDocumentCompleteness(V7.Model.FinanceReport.FinDocumentCompletenessDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetInvestmentReportLandingPage(V7.Model.FinanceReport.FinInvestmentReportListRequestParam)">
            <summary>
            Get Investment Report with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetBudgetAllocation(V7.Model.FinanceReport.FinBudgetAllocationListRequestParam)">
            <summary>
            Get List Budget Allocation
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntity">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributor(V7.Model.Report.DistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetListingDNLandingPage(V7.Model.FinanceReport.FinListingDNRequestParam)">
            <summary>
            Get Listing DN with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityListingDN">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorListingDN(V7.Model.FinanceReport.FinListingDNDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetListingPromoReconLandingPage(V7.Model.FinanceReport.FinListingPromoReconRequestParam)">
            <summary>
            Get Listing Promo Reconciliation with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityListingPromoReconReporting">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorListingPromoRecon(V7.Model.FinanceReport.FinListingPromoReconDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetChannelListingPromoRecon(V7.Model.FinanceReport.ChannelSKPValidationParam)">
            <summary>
            Get List channel
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetUserGroupsforFinPromoRecon(System.String[])">
            <summary>
            Get user groups for promo reconciliation
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetListingPromoReportingLandingPage(V7.Model.FinanceReport.FinListingPromoReportingRequestParam)">
            <summary>
            Get Listing Promo Reporting with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetListingPromoReportingMechanismLP(V7.Model.FinanceReport.FinListingPromoReportingRequestParam)">
            <summary>
            Get Listing Promo Reporting by mechanism with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetListingPromoReportingPostReconLP(V7.Model.FinanceReport.FinListingPromoReportingRequestParam)">
            <summary>
            Get Listing Promo Reporting Post Recon
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityListingPromoReporting">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorListingPromoReporting(V7.Model.FinanceReport.FinListingPromoReportingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetChannelListingPromoReporting(V7.Model.FinanceReport.ChannelListingPromoReporting)">
            <summary>
            Get List Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.CekInvestmentNotifListingPromoReporting(Repositories.Entities.Models.InvestmentNotifBodyFinReport)">
            <summary>
            Get list investment notification for promo reporting
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetCategoryDropdownList">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetInvestmentReportLandingPage(V7.Model.FinanceReport.FinMatrixApprovalListingRequestParam)">
            <summary>
            Get Matrix Approval Listing Report with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetFinanceMatrixPromoAprovallistingHistory(V7.Model.Master.MatrixPromoApprovalHistoryListReq)">
            <summary>
            Get Report Matrix approval history
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorMatrixApprovalListing(V7.Model.FinanceReport.FinMatrixApprovalListingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetCategoryDropdownListforMatrixApprovalListing">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetFinPromoDisplayLandingPage(V7.Model.FinanceReport.FinPromoApprovalAgingRequestParam)">
            <summary>
            Get  Promo Approval Aging with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityPromoApprovalAging">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorPromoApprovalAging(V7.Model.FinanceReport.FinPromoApprovalAgingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.PromoApprovalReminder(System.String,System.String,System.String)">
            <summary>
            Get Promo approval reminder list LP
            </summary>
            <param name="year"></param>
            <param name="monthStart"></param>
            <param name="monthEnd"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.PromoApprovalReminderRegularSend">
            <summary>
            get Data email send regular
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.PromoApprovalReminderConfig">
            <summary>
            get Data auto config
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.UpdatePromoApprovalReminderConfig(V7.Model.Tools.PromoApprovalReminderSettingUpdateParam)">
            <summary>
            save Data auto config
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.UpdatePromoApprovalReminderManualEmailConfig(V7.Model.Tools.PromoApprovalReminderManualEmailParam)">
            <summary>
            Save Data email send regular (manual)
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoApprovalReminderSourceEmail(System.String,System.Int32,System.Int32)">
            <summary>
            get Data source email
            </summary>
            <param name="usergroupid"></param>
            <param name="userlevel"></param>
            <param name="isdeleted"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoApprovalReminderManualEmailConfigData">
            <summary>
            get Data Email regular
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetFinPromoDisplayLandingPage(V7.Model.FinanceReport.FinPromoDisplayRequestParam)">
            <summary>
            Get Listing Promo Display with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityPromoDisplay">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorPromoDisplay(V7.Model.FinanceReport.FinPromoDisplayDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoDisplaybyId(System.Int32)">
            <summary>
            Get Promo Display by  Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoReconPromoDisplay(System.Int32)">
            <summary>
            Get Promo Recom Promo Display 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoDisplaypdfbyId(System.Int32)">
            <summary>
            Get Promo V2 Display by Id to Print Out PDF
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoHistoricalMovementLandingPage(V7.Model.FinanceReport.FinPromoHistoricalMovementRequestParam)">
            <summary>
            Get Promo Historical Movement with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityPromoHistoricalMovement">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorPromoHistoricalMovement(V7.Model.FinanceReport.FinPromoHistoricalMovementDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetPromoPlanningReportingLandingPage(V7.Model.FinanceReport.FinPromoPlanningReportingRequestParam)">
            <summary>
            Get Promo Planning Reporting with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityPromoPlanningReporting">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorPromoPlanningReporting(V7.Model.FinanceReport.FinPromoPlanningReportingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetChannelPromoPlanningReporting(V7.Model.FinanceReport.ChannelPromoPlanningReportingParam)">
            <summary>
            Get List Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetFinPromoSubmissionLandingPage(V7.Model.FinanceReport.FinPromoSubmissionRequestParam)">
            <summary>
            Get Promo Planning Reporting with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntityPromoSubmission">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorPromoSubmission(V7.Model.FinanceReport.FinPromoSubmissionDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetChanneLPromoSubmission(V7.Model.FinanceReport.ChannelPromoSubmissionParam)">
            <summary>
            Get List Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.PromoSubmissionExceptionClear(System.String)">
            <summary>
            Clear promo submission exception 
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetFinLatePromoSubmission">
            <summary>
            Get Data Config Late Promo Creation
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.PromoSubmissionEmail(Repositories.Entities.Models.PromoSubmissionEmailParam)">
            <summary>
            Get Data Config Late Promo Creation
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetFinPromoSubmissionDownload(V7.Model.FinanceReport.FinPromoSubmissionRequestParam)">
            <summary>
            Get Promo Submission Download 
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetUserList(System.String,System.Int32,System.Int32)">
            <summary>
            Get User data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetUserGroupList">
            <summary>
            Get User Group List
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetSKPVaildationLandingPage(V7.Model.FinanceReport.FinSKPValidationRequestParam)">
            <summary>
            Get SKP Validation with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntitySKPValidation">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorSKPValidation(V7.Model.FinanceReport.FinSKPValidationDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetChannelSKPValidation(V7.Model.FinanceReport.ChannelSKPValidationParam)">
            <summary>
            Get List Channel
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetSummaryAgingApprovalLandingPage(V7.Model.FinanceReport.FinSummaryAgingApprovalRequestParam)">
            <summary>
            Get Summary Aging Approval with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetEntitySummaryAgingApproval">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetDistributorSummaryAgingApproval(V7.Model.FinanceReport.FinSummaryAgingApprovalDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetTTcontrolRcdD(V7.Model.Report.TTControlRCDCParam)">
            <summary>
            Report Channel Summary
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.FinanceReport.FinanceReportController.GetTTControlFilter">
            <summary>
            Report TT Control RC DC Filter
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetDistributorSubAccountLandingPage(Repositories.Entities.Models.DistributorSubAccountListRequest)">
            <summary>
            Get all distributor to subaccount mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetDistributorSubAccountDownload">
            <summary>
            Get all distributor to subaccount mapping data for download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetDistributorforDistributorSubAccount">
            <summary>
            Get distributor data for distributor to subaccount mapping data dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetChannelforDistributorSubAccount">
            <summary>
            Get all channel data distributor to subaccount mapping data for dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubChannelforDistributorSubAccount(System.Int32)">
            <summary>
            Get all subchannel data for distributor to subaccount mapping data dropdown
            </summary>
            <param name="ChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetAccountforDistributorSubAccount(System.Int32)">
            <summary>
            Get all account data for distributor to subaccount mapping data dropdown
            </summary>
            <param name="SubChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubAccountforDistributorSubAccount(System.Int32)">
            <summary>
            Get all account data for distributor to subaccount mapping data dropdown
            </summary>
            <param name="AccountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.CreateDistributorSubAccount(V7.Model.Mapping.DIstributorSubAccountPostBody)">
            <summary>
            Create distributor to subaccount mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.DeleteDistributorSubAccount(V7.Model.Mapping.DIstributorSubAccountDeleteBody)">
            <summary>
            Delete distributor to subaccount mapping data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorWHTLP(V7.Model.DistributorWHTLPRequest)">
            <summary>
            Get all distributor WHT data LP
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorWHTById(System.Int32)">
            <summary>
            GET deductable value by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorWHTDownload(V7.Model.DistributorWHTLPRequest)">
            <summary>
            Get all distributor activity wht mapping data for download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorWHTDownloadTemplate(V7.Model.DistributorWHTLPRequest)">
            <summary>
            Get all distributor WHT data for template
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorWHTUpdate(V7.Model.DistributorWHTUpdateParam)">
            <summary>
            update distributor wht map
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorWHTDelete(V7.Model.DistributorWHTDeleteParam)">
            <summary>
            delete distributor wht map by id
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorWHTUpload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload distributor WHTType mapping data
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorWHTCreate(V7.Model.DistributorWHTCreateParam)">
            <summary>
            Create distributor wht maping
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MaspDistributorWHTTypeList">
            <summary>
            Get WHTType list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorDistributorList">
            <summary>
            Get Distributor list - distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorsubActivityList">
            <summary>
            Get Sub Activity list - distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.MapDistributorsubAccountList">
            <summary>
            Get Sub Account list - distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetPICDNManualLandingPage(Repositories.Entities.Models.PICDNManualListRequest)">
            <summary>
            Get all pic to dnmanual mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetPICDNManualDownload">
            <summary>
            Get all pic to dnmanual mapping data for download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetUserIdPICDNManual">
            <summary>
            Get distributor data for pic to dnmanual mapping data dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetChannelforPICDNManual">
            <summary>
            Get all channel data pic to dnmanual mapping data for dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubChannelforPICDNManual(System.Int32)">
            <summary>
            Get all subchannel data for pic to dnmanual mapping data dropdown
            </summary>
            <param name="ChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetAccountforPICDNManual(System.Int32)">
            <summary>
            Get all account data for pic to dnmanual mapping data dropdown
            </summary>
            <param name="SubChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubAccountforPICDNManual(System.Int32)">
            <summary>
            Get all account data for pic to dnmanual mapping data dropdown
            </summary>
            <param name="AccountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.CreatePICDNManual(V7.Model.Mapping.PICDNManualPostBody)">
            <summary>
            Create pic to dnmanual mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.DeletePICDNManual(V7.Model.Mapping.PICDNManualDeleteBody)">
            <summary>
            Delete pic to dnmanual mapping data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetPromoReconSubActivityLandingPage(Repositories.Entities.Models.PromoReconSubActivityListRequest)">
            <summary>
            Get all promorecon-subactivity mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.CreateDistributorSubAccount(V7.Model.Mapping.PromoReconSubActivityCreateParam)">
            <summary>
            Create promorecon-subactivity mapping data
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.UpdatePromoReconSubActivity(V7.Model.Mapping.PromoReconSubActivityCreateParam)">
            <summary>
            Update promorecon-subactivity mapping data
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetPromoReconSubActivityDownload">
            <summary>
            Get all promorecon-subactivity mapping data for download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.DeletePromoReconSubActivity(V7.Model.Mapping.PromoReconSubActivityDeleteParam)">
            <summary>
            Delete promorecon-subactivity mapping data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetPromoReconSubActivitybySubActivityId(System.Int32)">
            <summary>
            Get promorecon-subactivity by subactivity Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubActivityDropdown(System.Int32)">
            <summary>
            Get all subactivity mapping data for dropdown
            </summary>
            <param name="ActivityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.PromoReconSubactivity(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Import Excell Mapping promo Recon Sub Activity
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.ActivityforSubActivityPromoRecon(System.Int32)">
            <summary>
            Get activity dropdown data base on sub category id
            </summary>
            <param name="SubCategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.SubCategoryforSubActivity(System.Int32)">
            <summary>
            Get subcategory for dropdown data base on category id 
            </summary>
            <param name="CategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.CategoryforSubActivityPromoRecon">
            <summary>
            Get category dropdown data  
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubActivityTemplate">
            <summary>
            Get SubActivity data for template
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSKUBlitzLandingPage(Repositories.Entities.Models.SKUBlitzListRequest)">
            <summary>
            Get all sku to blitz mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSKUBlitzDownload">
            <summary>
            Get all sku to blitz mapping data for download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetEntityforSKUBlitz">
            <summary>
            Get entity data for sku to blitz mapping data dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetBrandforSKUBlitz(System.Int32)">
            <summary>
            Get all brand data for sku to blitz mapping data dropdown
            </summary>
            <param name="EntityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSKUforSKUBlitz(System.Int32)">
            <summary>
            Get all sku data for sku to blitz mapping data dropdown
            </summary>
            <param name="BrandId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.CreateSKUBlitz(V7.Model.Mapping.SKUBlitzPostBody)">
            <summary>
            Create sku to blitz mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.DeleteSKUBlitz(V7.Model.Mapping.SKUBlitzDeleteBody)">
            <summary>
            Delete sku to blitz mapping data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubAccountBlitzLandingPage(Repositories.Entities.Models.SubAccountBlitzListRequest)">
            <summary>
            Get all subaccount to blitz mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubAccountBlitzDownload">
            <summary>
            Get all subaccount to blitz mapping data for download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetChannelforSubAccountBlitz">
            <summary>
            Get all channel data subaccount to blitz mapping data for dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubChannelforSubAccountBlitz(System.Int32)">
            <summary>
            Get all subchannel data for subaccount to blitz mapping data dropdown
            </summary>
            <param name="ChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetAccountforSubAccountBlitz(System.Int32)">
            <summary>
            Get all account data for subaccount to blitz mapping data dropdown
            </summary>
            <param name="SubChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubAccountforSubAccountBlitz(System.Int32)">
            <summary>
            Get all account data for subaccount to blitz mapping data dropdown
            </summary>
            <param name="AccountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.CreateSubAccountBlitz(Repositories.Entities.Models.SubAccountBlitzCreate)">
            <summary>
            Create subaccount to blitz mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.DeleteSubAccountBlitz(Repositories.Entities.Models.SubAccountBlitzDelete)">
            <summary>
            Delete subaccount to blitz mapping data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetTaxLevelLandingPage(Repositories.Entities.Models.TaxLevelListRequest)">
            <summary>
            Get all taxlevel data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.CreateDistributorSubAccount(V7.Model.Mapping.TaxLevelCreateParam)">
            <summary>
            Create taxlevel mapping data
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetTaxLevelDownload">
            <summary>
            Get all taxlevel mapping data for download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.DeleteTaxLevel(V7.Model.Mapping.TaxLevelDeleteParam)">
            <summary>
            Delete taxlevel mapping data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetEntityforTaxLevel">
            <summary>
            Get entity data for taxlevel mapping data dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetUserSubAccountLandingPage(Repositories.Entities.Models.UserSubAccountListRequest)">
            <summary>
            Get all user to subaccount mapping data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetUserSubAccountDownload">
            <summary>
            Get all user to subaccount mapping data for download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetChannelforUserSubAccount">
            <summary>
            Get all channel data user to subaccount mapping data for dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetUserIdUserSubAccount">
            <summary>
            Get all userid data user to subaccount mapping data for dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubChannelforUserSubAccount(System.Int32)">
            <summary>
            Get all subchannel data for user to subaccount mapping data dropdown
            </summary>
            <param name="ChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetAccountforUserSubAccount(System.Int32)">
            <summary>
            Get all account data for user to subaccount mapping data dropdown
            </summary>
            <param name="SubChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.GetSubAccountforUserSubAccount(System.Int32)">
            <summary>
            Get all account data for user to subaccount mapping data dropdown
            </summary>
            <param name="AccountId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.CreateUserSubAccount(V7.Model.Mapping.UserSubAccountPostBody)">
            <summary>
            Create user to subaccount mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Mapping.MappingController.DeleteUserSubAccount(V7.Model.Mapping.UserSubAccountDeleteBody)">
            <summary>
            Delete user to subaccount mapping data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetAccountById(Repositories.Entities.Models.AccountById)">
            <summary>
            Get account data base on account Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetChannelLongDesc">
            <summary>
            Get channel data for dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubChannelLongDesc(System.Int32)">
            <summary>
            Get subchannel data for dropdown
            </summary>
            <param name="ChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateAccount(Repositories.Entities.Models.AccountCreate)">
            <summary>
            Create account data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateAccount(Repositories.Entities.Models.AccountUpdate)">
            <summary>
            Update account data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteAccount(Repositories.Entities.Models.AccountDelete)">
            <summary>
            Delete account data base on account Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetAccountLandingPage(Repositories.Entities.Models.AccountListRequest)">
            <summary>
            Get all account data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetActivityById(Repositories.Entities.Models.ActivityById)">
            <summary>
            Get activity data base on activity Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCategoryforActivity">
            <summary>
            Get category data for dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubCategoryforActivity(System.Int32)">
            <summary>
            Get subcategory data for dropdown
            </summary>
            <param name="CategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateActivity(Repositories.Entities.Models.ActivityCreate)">
            <summary>
            Create activity data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateActivity(Repositories.Entities.Models.ActivityUpdate)">
            <summary>
            Update activity data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteActivity(Repositories.Entities.Models.ActivityDelete)">
            <summary>
            Delete activity data base on activity Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetActivityLandingPage(Repositories.Entities.Models.ActivityListRequest)">
            <summary>
            Get all activity data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetBrandById(Repositories.Entities.Models.BrandById)">
            <summary>
            Get brand data base on brand Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetEntityforBrand">
            <summary>
            Get entity data for dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateBrand(Repositories.Entities.Models.BrandCreate)">
            <summary>
            Create brand data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateBrand(Repositories.Entities.Models.BrandUpdate)">
            <summary>
            Modified brand data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteBrand(Repositories.Entities.Models.BrandDelete)">
            <summary>
            Delete brand data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetBrandLandingPage(Repositories.Entities.Models.BrandListRequest)">
            <summary>
            Get brand data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCancelReasonById(Repositories.Entities.Models.CancelReasonById)">
            <summary>
            Get cancel reason data base on cancel reason Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateCancelReason(Repositories.Entities.Models.CancelReasonCreate)">
            <summary>
            Create cancel reason data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateCancelReason(Repositories.Entities.Models.CancelReasonUpdate)">
            <summary>
            Modified cancel reason data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteCancelReason(Repositories.Entities.Models.CancelReasonDelete)">
            <summary>
            Delete cancel reason data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCancelReasonLandingPage(Repositories.Entities.Models.CancelReasonListRequest)">
            <summary>
            Get cancel reason data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCategoryById(Repositories.Entities.Models.CategoryById)">
            <summary>
            Get category data base on category Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateCategory(Repositories.Entities.Models.CategoryCreate)">
            <summary>
            Create category data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateCategory(Repositories.Entities.Models.CategoryUpdate)">
            <summary>
            Modified category data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteCategory(Repositories.Entities.Models.CategoryDelete)">
            <summary>
            Delete category data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCategoryLandingPage(Repositories.Entities.Models.CategoryListRequest)">
            <summary>
            Get category data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCategoryByShortDesc(System.String)">
            <summary>
            Get category data base on category shortdesc
            </summary>
            <param name="categoryShortDesc"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetChannelById(Repositories.Entities.Models.ChannelById)">
            <summary>
            Get channel data base on channel Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateChannel(Repositories.Entities.Models.ChannelCreate)">
            <summary>
            Create channel data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateChannel(Repositories.Entities.Models.ChannelUpdate)">
            <summary>
            Modified channel data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteChannel(Repositories.Entities.Models.ChannelDelete)">
            <summary>
            Delete channel data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetChannelLandingPage(Repositories.Entities.Models.ChannelListRequest)">
            <summary>
            Get channel data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateDistributor(Repositories.Entities.Models.DistributorCreate)">
            <summary>
            Create new distributor
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetDistributorLandingPage(Repositories.Entities.Models.DistributorListRequest)">
            <summary>
            Distributor LP with pagination
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetDistributorById(Repositories.Entities.Models.DistributorById)">
            <summary>
            Get Distributor by ID
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateDistributor(Repositories.Entities.Models.DistributorUpdate)">
            <summary>
            Edit distributor
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteDistributor(Repositories.Entities.Models.DistributorDelete)">
            <summary>
            Delete Distributor
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetEntityById(Repositories.Entities.Models.EntityById)">
            <summary>
            Get entity data base on entity Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateEntity(Repositories.Entities.Models.EntityCreate)">
            <summary>
            Create entity data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateEntity(Repositories.Entities.Models.EntityUpdate)">
            <summary>
            Modified entity data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteEntity(Repositories.Entities.Models.EntityDelete)">
            <summary>
            Delete Entity
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetEntityLandingPage(Repositories.Entities.Models.EntityListRequest)">
            <summary>
            Get entity data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetGroupBrandById(System.Int32)">
            <summary>
            Get GroupBrand data base on GroupBrand Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateGroupBrand(Repositories.Entities.Models.GroupBrandCreate)">
            <summary>
            Create GroupBrand data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateGroupBrand(Repositories.Entities.Models.GroupBrandUpdate)">
            <summary>
            Modified GroupBrand data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteGroupBrand(Repositories.Entities.Models.GroupBrandDelete)">
            <summary>
            Delete GroupBrand data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetGroupBrandLandingPage(Repositories.Entities.Models.GroupBrandListRequest)">
            <summary>
            Get GroupBrand data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetInvestmentTypeById(Repositories.Entities.Models.InvestmentTypeById)">
            <summary>
            Get investment type data base on Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateInvestmentType(Repositories.Entities.Models.InvestmentTypeCreate)">
            <summary>
            Create investment type data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateInvestmentType(Repositories.Entities.Models.InvestmentTypeUpdate)">
            <summary>
            Modified investment type data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.ActivateInvestmentType(Repositories.Entities.Models.InvestmentTypeActivate)">
            <summary>
            Activating deactivated investment type data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteInvestmentType(Repositories.Entities.Models.InvestmentTypeDelete)">
            <summary>
            Delete investment type data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetInvestmentTypeLandingPage(Repositories.Entities.Models.InvestmentTypeListRequest)">
            <summary>
            Get investment type data for landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateInvestmentTypeMapping(V7.Model.Master.InvestmentTypeMappingCreateParam)">
            <summary>
            Create investment type mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteInvestmentTypeMapping(V7.Model.Master.InvestmentTypeMappingDeleteParam)">
            <summary>
            Deleted investment type mapping data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.InvestmentTypeMap(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get investment type mmaping data base on parameter
            </summary>
            <param name="activityid"></param>
            <param name="subactivity"></param>
            <param name="categoryid"></param>
            <param name="subcategoryid"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCategoryforInvestmentMap">
            <summary>
            Get category dropdown data  
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubCategoryInvestmentMap(System.Int32)">
            <summary>
            Get subcategory for dropdown data base on category id 
            </summary>
            <param name="CategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetActivityInvestmentMap(System.Int32)">
            <summary>
            Get activity dropdown data base on sub category id
            </summary>
            <param name="SubCategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubActivityInvestmentMap(System.Int32)">
            <summary>
            Get subactivity dropdown data
            </summary>
            <param name="ActivityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.InvestmentTypeInvestmentMap">
            <summary>
            Get investment type dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetMatrixPromoAproval(Repositories.Entities.Models.MatrixPromoApprovalBodyReq)">
            <summary>
            Get matrix promo approval landing page data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetMatrixPromoAprovalHistory(V7.Model.Master.MatrixPromoApprovalHistoryListReq)">
            <summary>
            Get Matrix approval history
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateMatrixPromoAproval(Repositories.Entities.Models.MatrixPromoApprovalInsert)">
            <summary>
            create matrix promo approval data 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateMatrixPromoAproval(Repositories.Entities.Models.MatrixPromoApprovalUpdate)">
            <summary>
            Modified matrix promo approval
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetMatrixPromoAprovalbyId(Repositories.Entities.Models.GetMatrixPromoAprovalbyIdBody)">
            <summary>
            Get matrix promo approval data base on matrix promo approval Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetEntityForMatrixPromo">
            <summary>
            Get entity dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetChannelforMatrixPromo">
            <summary>
            Get channel dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetDistributorforMatrixPromo(System.Int32)">
            <summary>
            Get distributor dropdown data base on entity id
            </summary>
            <param name="PrincipalId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetInitiatorforMatrixPromo">
            <summary>
            Get initiator dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubActivityTypeforMatrixPromo">
            <summary>
            Get activity type dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubChannelforMatrixPromo(System.Int32)">
            <summary>
            Get subchannel dropdown data base on channel id
            </summary>
            <param name="ChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCategoryforMatrixPromo">
            <summary>
            Get category dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubActivityTypebyCategoryId(System.Int32)">
            <summary>
            Get Sub Activity Type base on category Id dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetMechanismLandingPage(Repositories.Entities.Models.MechanismListRequest)">
            <summary>
            Get mechanism landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetMechanismDownload">
            <summary>
            Get mechanism template download
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetProductLandingPageforMechanism(Repositories.Entities.Models.ProductListRequest)">
            <summary>
            Get product landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubActivityLandingPageforMechanism(Repositories.Entities.Models.SubActivityListRequest)">
            <summary>
            Get subactivity landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubAccountLandingPageforMechanism(Repositories.Entities.Models.SubAccountListRequest)">
            <summary>
            Get subaccount landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateMechanisme(Repositories.Entities.Models.InsertMechanismeBody)">
            <summary>
            Create mechanism data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateMechanisme(Repositories.Entities.Models.UpdateMechanismeBody)">
            <summary>
            Modified mechanism data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteMechanisme(Repositories.Entities.Models.DeleteMechanismeBody)">
            <summary>
            Delete mechanism data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetMechanismeListsByParam(Repositories.Entities.Models.GetMechanismByParam)">
            <summary>
            Get mechanism data base on parameter 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetMechanismeListById(Repositories.Entities.Models.GetMechanismById)">
            <summary>
            Get mechanism data base on mechanism Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.ImportMechanism(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload mechanism data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetMechanismAttributeByParent(Repositories.Entities.Models.GetAttributeByParentBodyReq)">
            <summary>
            Get attribute mechanism data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetEntityForMechanisms">
            <summary>
            Get entity dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetChannelForMechanisms">
            <summary>
            Get channel dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetProductById(Repositories.Entities.Models.ProductById)">
            <summary>
            Get product data base on product Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetEntityforProduct">
            <summary>
            Get entity dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetBrandforProduct(System.Int32)">
            <summary>
            Get brand dropdown data base on entity id
            </summary>
            <param name="PrincipalId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateProduct(Repositories.Entities.Models.ProductCreate)">
            <summary>
            Create product data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateProduct(Repositories.Entities.Models.ProductUpdate)">
            <summary>
            Modified product data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteProduct(Repositories.Entities.Models.ProductDelete)">
            <summary>
            Delete product data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetProductLandingPage(Repositories.Entities.Models.ProductListRequest)">
            <summary>
            Get product landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetProfitCenterById(Repositories.Entities.Models.ProfitCenterById)">
            <summary>
            Get profit center data base on profit center Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateProfitCenter(Repositories.Entities.Models.ProfitCenterCreate)">
            <summary>
            Create profit center data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateProfitCenter(Repositories.Entities.Models.ProfitCenterUpdate)">
            <summary>
            Modified profit center data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetProfitCenterLandingPage(Repositories.Entities.Models.ProfitCenterListRequest)">
            <summary>
            Get profit center landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetRegionById(Repositories.Entities.Models.RegionById)">
            <summary>
            Get region data base on region Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateRegion(Repositories.Entities.Models.RegionCreate)">
            <summary>
            Create region data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateRegion(Repositories.Entities.Models.RegionUpdate)">
            <summary>
            Modified region data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteRegion(Repositories.Entities.Models.RegionDelete)">
            <summary>
            Delete region data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetRegionLandingPage(Repositories.Entities.Models.RegionListRequest)">
            <summary>
            Get region landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSellingPointById(Repositories.Entities.Models.SellingPointById)">
            <summary>
            Get selling point data base on selling point Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetRegionforSellingPoint">
            <summary>
            Get region dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetProfitCenterforSellingPoint">
            <summary>
            Get profit center dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateSellingPoint(Repositories.Entities.Models.SellingPointCreate)">
            <summary>
            Create selling point data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateSellingPoint(Repositories.Entities.Models.SellingPointUpdate)">
            <summary>
            Modified selling point data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteSellingPoint(Repositories.Entities.Models.SellingPointDelete)">
            <summary>
            Delete selling point data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSellingPointLandingPage(Repositories.Entities.Models.SellingPointListRequest)">
            <summary>
            Get selling point landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubAccountById(Repositories.Entities.Models.SubAccountById)">
            <summary>
            Get sub account data base on sub account Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetChannelforSubAccount">
            <summary>
            Get channel dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubChannelforSubAccount(System.Int32)">
            <summary>
            Get sub channel dropdown data
            </summary>
            <param name="ChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetAccountforSubAccount(System.Int32)">
            <summary>
            Get account dropdown data
            </summary>
            <param name="SubChannelId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateSubAccount(Repositories.Entities.Models.SubAccountCreate)">
            <summary>
            Create sub account data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateSubAccount(Repositories.Entities.Models.SubAccountUpdate)">
            <summary>
            Modified sub account data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteSubAccount(Repositories.Entities.Models.SubAccountDelete)">
            <summary>
            Delete sub account data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubAccountLandingPage(Repositories.Entities.Models.SubAccountListRequest)">
            <summary>
            Get sub account landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubActivityById(Repositories.Entities.Models.SubActivityById)">
            <summary>
            Get sub activity data base on sub activity Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CategoryforSubActivity">
            <summary>
            Get category dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.ActivityTypeforSubActivity">
            <summary>
            Get activity type dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.ActivityforSubActivity(System.Int32)">
            <summary>
            Get activity dropdown data base sub category Id
            </summary>
            <param name="SubCategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.SubCategoryforSubActivity(System.Int32)">
            <summary>
            Get sub category dropdown data base on category id
            </summary>
            <param name="CategoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateSubActivity(Repositories.Entities.Models.SubActivityCreate)">
            <summary>
            Create sub activity data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateSubActivity(Repositories.Entities.Models.SubActivityUpdate)">
            <summary>
            Modified sub activity data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteSubActivity(Repositories.Entities.Models.SubActivityDelete)">
            <summary>
            Delete sub activity data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubActivityLandingPage(Repositories.Entities.Models.SubActivityListRequest)">
            <summary>
            Get sub activity landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubActivityTypeById(Repositories.Entities.Models.SubActivityTypeById)">
            <summary>
            Get sub activity type data base on sub activity type Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateSubActivityType(Repositories.Entities.Models.SubActivityTypeCreate)">
            <summary>
            Create sub activity type data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateSubActivityType(Repositories.Entities.Models.SubActivityTypeUpdate)">
            <summary>
            Modified sub activity type data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteSubActivityType(Repositories.Entities.Models.SubActivityTypeDelete)">
            <summary>
            Delete sub activity type data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubActivityTypeLandingPage(Repositories.Entities.Models.SubActivityTypeListRequest)">
            <summary>
            Get sub activity type landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubCategoryById(Repositories.Entities.Models.SubCategoryById)">
            <summary>
            Get sub category data base on sub category  Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetCategoryforSubCategory">
            <summary>
            Get category dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateSubCategory(Repositories.Entities.Models.SubCategoryCreate)">
            <summary>
            Create sub category data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateSubCategory(Repositories.Entities.Models.SubCategoryUpdate)">
            <summary>
            Modified sub category data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteSubCategory(Repositories.Entities.Models.SubCategoryDelete)">
            <summary>
            Delete sub category data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubCategoryLandingPage(Repositories.Entities.Models.SubCategoryListRequest)">
            <summary>
            Get sub category landing page
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubChannelById(Repositories.Entities.Models.SubChannelById)">
            <summary>
            Get sub channel data base on sub channel Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetChannelLongDescforSubChannel">
            <summary>
            Get channel dropdown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.CreateSubChannel(Repositories.Entities.Models.SubChannelCreate)">
            <summary>
            Create sub channel data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.UpdateSubChannel(Repositories.Entities.Models.SubChannelUpdate)">
            <summary>
            Modified sub channel data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.DeleteSubChannel(Repositories.Entities.Models.SubChannelDelete)">
            <summary>
            Delete sub channel data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Master.MasterController.GetSubChannelLandingPage(Repositories.Entities.Models.SubChannelListRequest)">
            <summary>
            Get sub channel landing page data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="T:V7.Controllers.Promo.PromoController">
            <summary>
            Promo Controller
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Promo sendback recon controller
            </summary>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoApprovalLP(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get Promo Approval for landing page
            </summary>
            <param name="year"></param>
            <param name="category"></param>
            <param name="entity"></param>
            <param name="distributor"></param>
            <param name="budgetparent"></param>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoApprovalEntity">
            <summary>
            Get Entity List
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetBudgetApprovalDistributor(V7.Model.Promo.DistributorListParam)">
            <summary>
            Get Distributor List
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoApprovalById(System.Int32)">
            <summary>
            Get PRomo Approval by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoApprovalApprove(V7.Model.PromoApproval.PromoApprovalWithSKPParam)">
            <summary>
            Promo Approval approve
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoApprovalSendback(V7.Model.PromoApproval.PromoApprovalWithSKPParam)">
            <summary>
            Promo Approval Sendback
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoApprovalByEmailApprove(V7.Model.PromoApproval.PromoApprovalByEmailWithSKPParam)">
            <summary>
            Promo Approval approve by email (no token) 
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoApprovalByEmailSendback(V7.Model.PromoApproval.PromoApprovalByEmailWithSKPParam)">
            <summary>
            Promo Approval Sendback by email (no token)
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoApprovalReconLP(V7.Model.Promo.PromoReconApprovalParam)">
            <summary>
            Get Promo Approval Recon for LP
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetApprovalReconEntity">
            <summary>
            Get Entity List
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetApprovalReconDistributor(V7.Model.Promo.DistributorListParam)">
            <summary>
            Get distributor list
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoApprovalReconApprove(V7.Model.PromoApproval.PromoApprovalReconParam)">
            <summary>
            Set Promo APproval recon approve
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoApprovalReconSendback(V7.Model.PromoApproval.PromoApprovalReconParam)">
            <summary>
            Set Promo APproval recon sendback
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconByID(System.Int32)">
            <summary>
            Get Promo APproval Recon by ID
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoApprovalReconByEmailApprove(V7.Model.PromoApproval.PromoApprovalReconByEmailParam)">
            <summary>
            Set Promo APproval recon approve by email (no token)
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoApprovalReconByEmailSendback(V7.Model.PromoApproval.PromoApprovalReconByEmailParam)">
            <summary>
            Set Promo APproval recon sendback by email (no token)
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetCategoryListforReconApproval">
            <summary>
            Get category list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetCategoryListforPromoApproval">
            <summary>
            Get category list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetDNDetailbyIdforPromoApproval(System.Int32)">
            <summary>
            Get DN by Id, Old API = "debetnote/getbyId"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetDNPaidforPromoApprovalRecon(System.Int32)">
            <summary>
            Get DN Paid
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetDNClaimforPromoApprovalRecon(System.Int32)">
            <summary>
            Get DN Claim 
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetTaxLevelforPromoApprovalRecon">
            <summary>
            Get TaxLevel for Promo Approval Recon DN Id, Old API = "mapmaterial/all"
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCancelLP(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get List promo cancel by pagination
            </summary>
            <param name="year"></param>
            <param name="entity"></param>
            <param name="distributor"></param>
            <param name="budgetparent"></param>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCancelRequestLP(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get List promo cancel request by pagination
            </summary>
            <param name="year"></param>
            <param name="entity"></param>
            <param name="distributor"></param>
            <param name="budgetparent"></param>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoCancelRequestApprove(V7.Model.Promo.PromoCancelRequestParam)">
            <summary>
            Set Promo Cancel Request approve
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoCancelRequestSendback(V7.Model.Promo.PromoCancelRequestParam)">
            <summary>
            Set Promo Cancel Request sendback
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoClosureLP(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,V7.Model.Promo.enBudgetRemaining,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            List ALL promo to close with pagination
            </summary>
            <param name="entity"></param>
            <param name="distributor"></param>
            <param name="channel"></param>
            <param name="start_from"></param>
            <param name="start_to"></param>
            <param name="remaining_budget"></param>
            <param name="start"></param>
            <param name="length"></param>
            <param name="filter"></param>
            <param name="txtsearch"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoClosureImport(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Import promo closure from excel (E1-2023 Item 17) 
            </summary>
            <author>andRie. May 9 2023 #885</author>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationLandingPage(V7.Model.Promo.promoCreationLPParam)">
            <summary>
            Get Promo Creation Listing with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationDownload(V7.Model.Promo.promoCreationDownloadParam)">
            <summary>
            Get Promo Creation Listing for Download
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationSourcePlanning(System.String,System.Int32,System.Int32)">
            <summary>
            Get Promo Creation Source Planning
            </summary>
            <param name="period"></param>
            <param name="entity"></param>
            <param name="distributor"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationSourceBudget(V7.Model.Promo.SourceBudgetParam)">
            <summary>
            Get Promo Creation Source Budget
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationChannel">
            <summary>
            Get Attribute Promo Creation Channel for Add Promo Creation
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationSubChannel(System.Int32[])">
            <summary>
            Get Attribute Promo Creation Sub Channel for Add Promo Creation
            </summary>
            <param name="arrayChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationAccount(System.Int32[])">
            <summary>
            Get Attribute Promo Creation Account for Add Promo Creation
            </summary>
            <param name="arraySubChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationSubAccount(System.Int32[])">
            <summary>
            Get Attribute Promo Creation Sub Account for Add Promo Creation
            </summary>
            <param name="arrayAccount"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationChannelByPromoId(System.Int32)">
            <summary>
            Get Attribute Promo Creation Channel for Edit Promo
            </summary>
            <param name="promoId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationSubChannelByPromoId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Creation Sub Channel for Edit Promo
            </summary>
            <param name="promoId"></param>
            <param name="arrayChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationAccountByPlanningId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Creation Account for Edit Promo 
            </summary>
            <param name="promoId"></param>
            <param name="arraySubChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationSubAccountByPromoId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Creation Sub Account for Edit Promo
            </summary>
            <param name="promoId"></param>
            <param name="arrayAccount"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationSKPDraft(System.Int32)">
            <summary>
            Get Promo Creation SKP for Generate SKP Draft
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoCreationCreate(V7.Model.Promo.PromoParam)">
            <summary>
            Create Promo Creation
            </summary>
            <param name="promo"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoCreationUpdate(V7.Model.Promo.PromoParam)">
            <summary>
            Create Promo Creation
            </summary>
            <param name="promo"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoCreationById(System.Int32)">
            <summary>
            Get data promo creation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoExist(V7.Model.Promo.PromoExistParam)">
            <summary>
            Get Promo Exist Account = Sub Account
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoExistDC(V7.Model.Promo.PromoExistDCParam)">
            <summary>
            Get Promo Exist For DC SN#125
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetLatePromoDays">
            <summary>
            Get Late Promo days
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoCancelRequest(V7.Model.Promo.PromoCancelReqParam)">
            <summary>
            Promo Creation Cancel REquest
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetCancelReason">
            <summary>
            Get Cancel Reason
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetGroupBrandByEntity(System.Int32)">
            <summary>
            Get group brand
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetGroupBrand(System.Int32)">
            <summary>
            Get brand-group by group id
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetSubCategoryId(System.Int32)">
            <summary>
            Get SubCategory List by categoryId
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetSubAccount(System.Int32[])">
            <summary>
            Get Sub Category List base on CategoryId
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetSubChannel(System.Int32[])">
            <summary>
            Get Sub Channel List base on ChannelId
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetAccount(System.Int32[])">
            <summary>
            Get Account List base on subchannel Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetActivityandSubActivityId(System.Int32)">
            <summary>
            Get activity and subactivity List base on subcategory Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetCategoryList">
            <summary>
            Get category list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoMechanismValidate(V7.Model.Promo.ValidateMechanismParam)">
            <summary>
            validate promo Mechanism 
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoDisplayLP(V7.Model.Promo.PromoDisplayLandingPageParam)">
            <summary>
            Promo Display with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoDisplayPrimaryById(System.Int32)">
            <summary>
            Get Promo Display by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoDisplaybyId(System.Int32)">
            <summary>
            Get Promo Display by id for Enail
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetAllPromoByStatus(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            List promo to print LP
            </summary>
            <param name="year"></param>
            <param name="entity"></param>
            <param name="distributor"></param>
            <param name="budgetparent"></param>
            <param name="channel"></param>
            <param name="cancelstatus"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningLandingPage(V7.Model.Promo.promoPlanningLPParam)">
            <summary>
            Get Promo Planning Listing with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningDistributor(V7.Model.Promo.DistributorListParam)">
            <summary>
            Get Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetBudgetHistoryEntity">
            <summary>
            Get Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoPlanningCreate(V7.Model.Promo.PromoPlanningParam)">
            <summary>
            Create Promo Planning
            </summary>
            <param name="promoPlanning"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoPlanningUpdate(V7.Model.Promo.PromoPlanningParam)">
            <summary>
            Update Promo Planning
            </summary>
            <param name="promo"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningDownload(V7.Model.Promo.promoPlanningDownloadParam)">
            <summary>
            Get Promo Planning Listing for Download
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningById(System.Int32)">
            <summary>
            Get data promo planning by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoAttribute(V7.Model.Promo.AttributeParam)">
            <summary>
            Get Attribute Promo
            &lt;br /&gt;
            isDeleted = All (All Data) ; 0 (data active) ; 1 (data inactive/isdeleted)
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetSubCategory">
            <summary>
            Get Sub Category Active for Promo after cut off
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoMechanism(V7.Model.Promo.MechanismSourceParam)">
            <summary>
            Get Promo Mechanism
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoAttributeRegion">
            <summary>
            Get Promo Attribute Region
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningChannel">
            <summary>
            Get Attribute Promo Planning Channel for Add or Duplicate Promo Planning
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningChannelByPlanningId(System.Int32)">
            <summary>
            Get Attribute Promo Planning Channel for Edit Promo Planning
            </summary>
            <param name="promoPlanningId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningSubChannel(System.Int32[])">
            <summary>
            Get Attribute Promo Planning Sub Channel for Add or Duplicate Promo Planning
            </summary>
            <param name="arrayChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningSubChannelByPlanningId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Planning Sub Channel for Edit Promo Planning
            </summary>
            <param name="promoPlanningId"></param>
            <param name="arrayChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningAccount(System.Int32[])">
            <summary>
            Get Attribute Promo Planning Account for Add or Duplicate Promo Planning
            </summary>
            <param name="arraySubChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningAccountByPlanningId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Planning Account for Edit Promo Planning
            </summary>
            <param name="promoPlanningId"></param>
            <param name="arraySubChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningSubAccount(System.Int32[])">
            <summary>
            Get Attribute Promo Planning Sub Account for Add or Duplicate Promo Planning
            </summary>
            <param name="arrayAccount"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningSubAccountByPlanningId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Planning Sub Account for Edit Promo Planning
            </summary>
            <param name="promoPlanningId"></param>
            <param name="arrayAccount"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetBaselineSales(V7.Model.Promo.BaselineParam)">
            <summary>
            Get Promo Baseline => promoType : 1 -> planning/promo ; 2 -> promo recon
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoConfigROICR(System.Int32)">
            <summary>
            Get Promo Configuretion ROI and Cost Ratio
            </summary>
            <param name="subActivityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningExist(V7.Model.Promo.PromoPlanningExistParam)">
            <summary>
            Get Promo Planning Exist Account = Sub Account
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningInvestmentType(System.Int32)">
            <summary>
            Get Promo Baseline => promoType : 1 -> planning/promo ; 2 -> promo recon
            </summary>
            <param name="subActivityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoPlanningCancel(V7.Model.Promo.PromoPlanningCancelParam)">
            <summary>
            Promo Planning cancel
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoPlanningByConditions(V7.Model.Promo.PromoPlanningViewbyConditionsParam)">
            <summary>
            Get Planning Approval by Param, Old API = "api/promoplanning/byconditions/{year}/{entity}/{distributor}/{userid}/{create_from}/{create_to}/{start_from}/{start_to}"
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.DNUploadUpdateFP(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Promo planning approval upload, Old API = "api/promoplan/approval"
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoTobeCreated(System.Int32,System.Int32,System.String)">
            <summary>
            Get Promo Tobe Created with pagination
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconLandingPage(V7.Model.Promo.promoReconLPParam)">
            <summary>
            Get Promo Creation Listing with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconDownload(V7.Model.Promo.promoReconDownloadParam)">
            <summary>
            Get Promo Creation Listing for Download
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconChannel">
            <summary>
            Get Attribute Promo Creation Channel for Add Promo Creation
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconSubChannel(System.Int32[])">
            <summary>
            Get Attribute Promo Creation Sub Channel for Add Promo Creation
            </summary>
            <param name="arrayChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconAccount(System.Int32[])">
            <summary>
            Get Attribute Promo Creation Account for Add Promo Creation
            </summary>
            <param name="arraySubChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoreconSubAccount(System.Int32[])">
            <summary>
            Get Attribute Promo Creation Sub Account for Add Promo Creation
            </summary>
            <param name="arrayAccount"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoreconChannelByPromoId(System.Int32)">
            <summary>
            Get Attribute Promo Creation Channel for Edit Promo
            </summary>
            <param name="promoId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconSubChannelByPromoId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Creation Sub Channel for Edit Promo
            </summary>
            <param name="promoId"></param>
            <param name="arrayChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconAccountByPlanningId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Creation Account for Edit Promo 
            </summary>
            <param name="promoId"></param>
            <param name="arraySubChannel"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconSubAccountByPromoId(System.Int32,System.Int32[])">
            <summary>
            Get Attribute Promo Creation Sub Account for Edit Promo
            </summary>
            <param name="promoId"></param>
            <param name="arrayAccount"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconSKPDraft(System.Int32)">
            <summary>
            Get Promo Creation SKP for Generate SKP Draft
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoReconUpdate(V7.Model.Promo.PromoReconUpdateParam)">
            <summary>
            Update Promo Recon
            </summary>
            <param name="promo"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconnById(System.Int32)">
            <summary>
            Get data promo creation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetCategoryListforPromoRecon">
            <summary>
            Get category list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconSubActivitybyActivityId(System.Int32,System.String)">
            <summary>
            Get mapping promo recon - subactivityId list, isDeleted = all semua data muncul, jika isDeleted = 0 maka hanya data yang active
            </summary>
            <param name="activityId"></param>
            <param name="isDeleted"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSubactivity(System.String)">
            <summary>
            Get mapping promo recon - subactivityId list
            </summary>
            <param name="activityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoReconSourceBudget(V7.Model.Promo.SourceBudgetParam)">
            <summary>
            Get Promo Recon Source Budget
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackLP(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get Promo Sendback for LP
            </summary>
            <param name="year"></param>
            <param name="entity"></param>
            <param name="distributor"></param>
            <param name="budgetparent"></param>
            <param name="channel"></param>
            <param name="categoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackEntity">
            <summary>
            Get Entity List
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackDistributor(V7.Model.Promo.DistributorListParam)">
            <summary>
            Get distributor list
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackById(System.Int32)">
            <summary>
            get promo sendback by ID                                                                                                                                                                        
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetActivityByCategory(System.Int32,System.Int32[],System.String)">
            <summary>
            Get list activity for promo sendback
            </summary>
            <param name="budgetid"></param>
            <param name="arrayParent"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetSubActivityByCategory(System.Int32,System.Int32[],System.String)">
            <summary>
            Get list subactivity for promo sendback
             </summary>
            <param name="budgetid"></param>
            <param name="arrayParent"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetChannelByPromo(System.Int32,System.Int32[])">
            <summary>
            Get list channel by promo
            </summary>
            <param name="promoId"></param>
            <param name="arrayParent"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetSubChannelByPromo(System.Int32,System.Int32[])">
            <summary>
            Get list channel by promo
            </summary>
            <param name="promoId"></param>
            <param name="arrayParent"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetAccountByPromo(System.Int32,System.Int32[])">
            <summary>
            Get list account by promo
            </summary>
            <param name="promoId"></param>
            <param name="arrayParent"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetSubAccountByPromo(System.Int32,System.Int32[])">
            <summary>
            Get list sub account by promo
            </summary>
            <param name="promoId"></param>
            <param name="arrayParent"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoSendback(V7.Model.Promo.PromoParam)">
            <summary>
            Update promo sendback
            </summary>
            <param name="promo"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetCategoryListforPromoSendBack">
            <summary>
            Get category list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackSourceBudget(V7.Model.Promo.SourceBudgetParam)">
            <summary>
            Get Promo Sendback Source Budget
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackReconLP(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get Promo sendback recon LP
            </summary>
            <param name="year"></param>
            <param name="entity"></param>
            <param name="distributor"></param>
            <param name="budgetparent"></param>
            <param name="channel"></param>
            <param name="categoryId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackReconEntity">
            <summary>
            Get Entity List
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackReconDistributor(V7.Model.Promo.DistributorListParam)">
            <summary>
            Get distributor list
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackReconById(System.Int32)">
            <summary>
            get promo sendback recon by ID, ex:3300                                                                                                                                                                       
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.PromoSendbackReconUpdate(V7.Model.Promo.PromoReconUpdateParam)">
            <summary>
            Save Promo Recon Sendback
            </summary>
            <param name="promo"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetCategoryListforPromoReconSendBack">
            <summary>
            Get category list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSendbackReconSourceBudget(V7.Model.Promo.SourceBudgetParam)">
            <summary>
            Get Promo Sendback Recon Source Budget
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoSKPValidationLandingPage(V7.Model.Promo.PromoSKPValidationParam)">
            <summary>
            Get Promo SKP Validation landing page
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoEntitySKPValidation">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetDistributorSKPValidation(System.Int32,System.Int32[])">
            <summary>
            Get List Distributor
            </summary>
            <param name="budgetId"></param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetChannelSKPValidation">
            <summary>
            Get List Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoWithSKP(System.Int32)">
            <summary>
            Get Promo SKPValidation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.ApprovalPromoWithSKPFlagging(V7.Model.PromoApproval.PromoApprovalWithSKPParam)">
            <summary>
            Saving SKPValidation
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoWorkflow(System.String)">
            <summary>
            Get Promo Workflow by Promo Id
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoWorkflowById(System.Int32)">
            <summary>
            Get Promo Workflow by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoWorkflowDN(System.String)">
            <summary>
            Get DN list for promo workflow
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoWorkflowChanges(System.String)">
            <summary>
            Get promo changes
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoWorkflowHistory(System.String)">
            <summary>
            get promo history
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoController.GetPromoWorkflowTimeline(System.String)">
            <summary>
            get promo timeline
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="T:V7.Controllers.Promo.PromoV2Controller">
            <summary>
            Promo Controller
            </summary>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoApporovalV2byId(System.Int32)">
            <summary>
            Get Promo v2 by id for approval
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoApporovalV2ReconbyId(System.Int32)">
            <summary>
            Get Promo Recon v2 by id for approval
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoApporovalV2DCbyId(System.Int32)">
            <summary>
            Get Promo DC v2 by id for approval
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoApporovalV2DCReconbyId(System.Int32)">
            <summary>
            Get Promo Recon DC v2 by id for approval
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoAutoCreation(V7.Model.Promo.PromoAutoCreation)">
            <summary>
            Promo Auto Generation
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoCancelRequestLP(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get Promo cancel request LP
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoCreationattributlist">
            <summary>
            Show all promo creation atribut
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoMechanismWithStatus(V7.Model.Promo.MechanismSourceParam)">
            <summary>
            Get Promo Mechanism with available Status
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoSSValue(V7.Model.Promo.PromoCreationSSValueParam)">
            <summary>
            Get SS Value for Promo Creation
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoPSValue(V7.Model.Promo.PromoCreationPSValueParam)">
            <summary>
            Get PS Value for Promo Creation
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoCreationBaseline(V7.Model.Promo.PromoCreationBaselineParam)">
            <summary>
            Get Promo Baseline
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoCreationCR(V7.Model.Promo.PromoCreationCRParam)">
            <summary>
            Get Promo CR
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoCreationById(System.Int32)">
            <summary>
            Get Promo v2 by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoCreationDCById(System.Int32)">
            <summary>
            Get Promo DC v2 by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoV2CreationInsert(V7.Model.Promo.PromoCreationInsertParam)">
            <summary>
            Promo creation V2 
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoV2CreationDCInsert(V7.Model.Promo.PromoCreationInsertParam)">
            <summary>
            Promo creation V2 DC
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoV2CreationUpdate(V7.Model.Promo.PromoCreationInsertParam)">
            <summary>
            Promo creation v2 update
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoV2CreationDCUpdate(V7.Model.Promo.PromoCreationInsertParam)">
            <summary>
            Promo creation v2 update DC
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoCreationBudget(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get budget for promo
            </summary>
            <param name="period"></param>
            <param name="categoryId"></param>
            <param name="subCategoryId"></param>
            <param name="channelId"></param>
            <param name="subChannelId"></param>
            <param name="accountId"></param>
            <param name="subAccountId"></param>
            <param name="distributorId"></param>
            <param name="groupBrandId"></param>
            <param name="subActivityTypeId"></param>
            <param name="activityId"></param>
            <param name="subActivityId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoDisplayV2byId(System.Int32)">
            <summary>
            Get Promo Display by id
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoDisplayV2EmailbyId(System.Int32)">
            <summary>
            Get Promo Display by id for email
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoDisplayV2PdfbyId(System.Int32)">
            <summary>
            Get Promo Display by id for generating pdf
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoDisplayBudgetEmailbyId(System.Int32)">
            <summary>
            Get Promo Display by id for generating budget email
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoCreationDisplayEmailbyId(System.Int32)">
            <summary>
            Get Promo Display by id for generating promo creation email
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoApprovalDisplayEmailbyId(System.Int32)">
            <summary>
            Get Promo Display by id for generating promo approval email
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoSendbackDisplayEmailbyId(System.Int32)">
            <summary>
            Get Promo Display by id for generating promo sendback email
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoDisplaySearchPdfbyId(System.Int32)">
            <summary>
            Get Promo Search Display by id for generating pdf
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoReconV2byId(System.Int32)">
            <summary>
            Get Promo Recon v2 by id
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoReconV2DCbyId(System.Int32)">
            <summary>
            Get Promo Recon DC v2 by id
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoV2ReconUpdate(V7.Model.Promo.PromoCreationInsertParam)">
            <summary>
            Promo Recon v2 update
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoDCV2ReconUpdate(V7.Model.Promo.PromoCreationInsertParam)">
            <summary>
            Promo Recon DC v2 update
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoSendbackV2byId(System.Int32)">
            <summary>
            Get Promo Sendback v2 by id for approval
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoSendbackV2DCbyId(System.Int32)">
            <summary>
            Get Promo DC Sendback v2 by id for approval
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoV2Sendback(V7.Model.Promo.PromoCreationInsertParam)">
            <summary>
            Promo Sendback v2
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.SetPromoV2SendbackDCUpdate(V7.Model.Promo.PromoCreationInsertParam)">
            <summary>
            Promo senvback v2 update DC
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoSendbackAttributlist">
            <summary>
            Show all promo sendback atribut
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoSendBackMechanismWithStatus(V7.Model.Promo.MechanismSourceParam)">
            <summary>
            Get Promo sendback Mechanism with available Status
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromosendbackSSValue(V7.Model.Promo.PromoCreationSSValueParam)">
            <summary>
            Get SS Value for Promo sendback
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromosendbackBaseline(V7.Model.Promo.PromoCreationBaselineParam)">
            <summary>
            Get Promo sendback Baseline
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromosendbackCR(V7.Model.Promo.PromoCreationCRParam)">
            <summary>
            Get Promo sendback CR
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoWorkflowV2(System.String)">
            <summary>
            Get Promo Workflow by refid
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Promo.PromoV2Controller.GetPromoWorkflowV2pdf(System.Int32)">
            <summary>
            Get Promo Workflow by refid to generate pdf
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:V7.Controllers.ReportController">
            <summary>
            Accrual Report handler
            </summary>
            <summary>
            DN Detail Reporting handler
            </summary>
            <summary>
            Report DN Display handler
            </summary>
            <summary>
            Document Completeness handler
            </summary>
            <summary>
            Investment Report handler
            </summary>
            <summary>
            Listing DN handler
            </summary>
            <summary>
            Listing Promo Reconciliation Reporting handler
            </summary>
            
            <summary>
            Listing Promo Reporting handler
            </summary>
            
            <summary>
            Matrix Approval Listing handler
            </summary>
            <summary>
            Promo Historical Movement handler
            </summary>
            <summary>
            Promo Planniong Reporting handler
            </summary>
            
            <summary>
            Report Controller
            </summary>
            <summary>
            SKP Validation Report handler
            </summary>
            
            <summary>
            Summary Aging Approval handler
            </summary>
        </member>
        <member name="M:V7.Controllers.ReportController.GetAccrualReportLandingPage(V7.Model.Report.AccrualReportListRequestParam)">
            <summary>
            Get Accrual Report with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityAccrual">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDNDetailReportingLandingPage(V7.Model.Report.DNDetailReportingListRequestParam)">
            <summary>
            Get DN Detail Reporting with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityDNDetailReporting">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributor(V7.Model.Report.DNDetailReportingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetSubAccount">
            <summary>
            Get List Sub Account
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetCategoryDropdownListforDNDetailReporting">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDNDisplayLandingPage(V7.Model.Report.DNDisplayRequestParam)">
            <summary>
            Get DN Display with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDNById(System.Int32)">
            <summary>
            Get Data DN by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityDNDisplay">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorDNDisplay(V7.Model.Report.DNDisplayDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetSellingPointDNDisplay">
            <summary>
            Get List Selling Point
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetTaxLevelDNDisplay">
            <summary>
            Get List Tax Level
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDNDisplayPrint(System.Int32)">
            <summary>
            Get Data DN for Print by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDocumentCompletenessLandingPage(V7.Model.Report.DocumentCompletenessRequestParam)">
            <summary>
            Get Matrix Approval Listing Report with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityDocumentCompleteness">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorDocumentCompleteness(V7.Model.Report.DocumentCompletenessDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetInvestmentReportLandingPage(V7.Model.Report.InvestmentReportListRequestParam)">
            <summary>
            Get Investment Report with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetBudgetAllocation(V7.Model.Report.BudgetAllocationListRequestParam)">
            <summary>
            Get List Budget Allocation
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntity">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributor(V7.Model.Report.DistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetListingDNLandingPage(V7.Model.Report.ListingDNRequestParam)">
            <summary>
            Get Listing DN with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityListingDN">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorListingDN(V7.Model.Report.ListingDNDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetListingPromoReconLandingPage(V7.Model.Report.ListingPromoReconRequestParam)">
            <summary>
            Get Listing Promo Reconciliation with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityListingPromoReconReporting">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorListingPromoRecon(V7.Model.Report.ListingPromoReconDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetListingPromoReportingLandingPage(V7.Model.Report.ListingPromoReportingRequestParam)">
            <summary>
            Get Listing Promo Reporting with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetListingPromoReportingbyMechanismLP(V7.Model.Report.ListingPromoReportingRequestParam)">
            <summary>
            Get Listing Promo Reporting by mechanism with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityListingPromoReporting">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorListingPromoReporting(V7.Model.Report.PromoPlanningReportingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetChannelListingPromoReporting">
            <summary>
            Get List Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetCategoryDropdownList">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetMatrixApprovalListingLandingPage(V7.Model.Report.MatrixApprovalListingRequestParam)">
            <summary>
            Get Matrix Approval Listing Report with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetMatrixPromoAprovallistingHistory(V7.Model.Master.MatrixPromoApprovalHistoryListReq)">
            <summary>
            Get Report Matrix approval history
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityMatrixApprovalListing">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorMatrixApprovalListing(V7.Model.Report.MatrixApprovalListingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetCategoryDropdownListforMatrixApprovalListingReport">
            <summary>
            Get List Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetPromoHistoricalMovementLandingPage(V7.Model.Report.PromoHistoricalMovementRequestParam)">
            <summary>
            Get Promo Historical Movement with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityPromoHistoricalMovement">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorPromoHistoricalMovement(V7.Model.Report.PromoHistoricalMovementDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetPromoPlanningReportingLandingPage(V7.Model.Report.PromoPlanningReportingRequestParam)">
            <summary>
            Get Promo Planning Reporting with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntityPromoPlanningReporting">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorPromoPlanningReporting(V7.Model.Report.PromoPlanningReportingDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetChannelPromoPlanningReporting">
            <summary>
            Get List Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetSKPVaildationLandingPage(V7.Model.Report.SKPValidationRequestParam)">
            <summary>
            Get SKP Validation with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntitySKPValidation">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorSKPValidation(V7.Model.Report.SKPValidationDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetChannelSKPValidation">
            <summary>
            Get List Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetSummaryAgingApprovalLandingPage(V7.Model.Report.SummaryAgingApprovalRequestParam)">
            <summary>
            Get Summary Aging Approval with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetEntitySummaryAgingApproval">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.ReportController.GetDistributorSummaryAgingApproval(V7.Model.Report.SummaryAgingApprovalDistributorListParam)">
            <summary>
            Get List Distributor
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.BlitzTranferNotif">
            <summary>
            Blitz Notification
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.SendEmail(V7.Model.EmailParam)">
            <summary>
            Sending Email NoAuth
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.Upload(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile},System.String)">
            <summary>
            Upload FIles
            </summary>
            <param name="formFiles"></param>
            <param name="subDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.dl(System.String,System.Int32)">
            <summary>
            Upload file to specific dir
            </summary>
            <param name="subDirectory"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.Index(System.String)">
            <summary>
            API controller to handle direct file download
            </summary>
            <remarks>uniq file code was generated by database</remarks>
            <param name="filecode">unique file code</param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.view(System.String)">
            <summary>
            API controller to handle direct file view
            </summary>
            <remarks>uniq file code was generated by database</remarks>
            <param name="filecode">unique file code</param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.Bottleneck(System.String)">
            <summary>
            Get Most lack endpoint
            </summary>
            <param name="format">json(default), html</param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetReminderList">
            <summary>
            Get reminder list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetAutoClosing">
            <summary>
            Get promo auto closing list
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetReminderPendingApproval">
            <summary>
            Get reminder pending approval
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.BlitzTranferNotification">
            <summary>
            Blitz Notification
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.PromoAutoClose">
            <summary>
            Post promo autoclose
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.CancelPromo(V7.Model.Tools.PromoCancelBodyRequest)">
            <summary>
            Post promo cancel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.CancelPromoPlanning(V7.Model.Tools.PromoPlanningCancelBodyRequest)">
            <summary>
            Post promo planning cancel
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.PromoApprovalReminderRegularSend">
            <summary>
            get Data email send regular
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetPromoDisplaybyId(System.Int32)">
            <summary>
            Get Promo Display by  Id Tools Scheduler
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetPromoReconPromoDisplay(System.Int32)">
            <summary>
            Get Promo Recom Promo Display Tools Scheduler
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.getUploadLog(System.String)">
            <summary>
            Get upload log and status by activity
            </summary>
            <param name="activity"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.insertUploadLog(V7.Model.Tools.UploadLogParam)">
            <summary>
            Insert upload log
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportBudgetRegion(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload budget region data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportBudgetUser(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload budget user data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImporMatrixApproval(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload matrix approval data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.getMatrixApprovalPromoProcessByProcessMatrix(System.Int32)">
            <summary>
            Update promo  by matrix id and return list of affected promo
            </summary>
            <param name="matrixId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.setMatrixapprovalProcessDone(System.Int32)">
            <summary>
            Set matrix approval per process done
            </summary>
            <param name="processId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.getMatrixApprovalByProcess(System.Int32)">
            <summary>
            Get matrix list by process id
            </summary>
            <param name="matrixId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImporMatrixApprovalBudget(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload matrix budget approval data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportMasterChannel(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload channel data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportBudgetDC(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload budget DC data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportBudget(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload budget data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportBudgetAdjustment(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload budget adjustment data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportBudgetAttribute(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload budget attribute data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportBudgetBrand(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload budget brand data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportMaster(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload master data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportMasterBrand(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload brand data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportMasterSubActivity(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload subactivity data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportMasterActivity(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload activity data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportMasterDistributor(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload distributor data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.ImportMasterPrincipal(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload principal data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.Import(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload region approval data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.SellpoImport(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload selling point data using excel 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.CreatePromoAttachment(Entities.Tools.SavePromoAttachmentParam)">
            <summary>
            Upload promo attachment save
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.RemovePromoAttachment(System.Int32,System.String)">
            <summary>
            Remove promo attachment save
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.SearchPromoByRefId(System.String)">
            <summary>
            Get Promo by RefId
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetBudgetHierarchyforAdjust(System.String,System.Int32,System.String)">
            <summary>
            Get Budget hirarki 
            </summary>
            <param name="period"></param>
            <param name="entityId"></param>
            <param name="budgetName"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetBudgetAllocationforAdjust(System.String,System.Int32)">
            <summary>
            Get budget allocation for adjust 
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetEntityBudgetAdjustment">
            <summary>
            Get List Entity
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetPromoNoteListAttachment(V7.Model.Tools.UploadModelPromoAttachment)">
            <summary>
            Get List Notes Proom Attachments
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.UploadPromoAttachment(V7.Model.Tools.UploadPromoAttachmentParam)">
            <summary>
            Get promo attribut for sending email approver
            </summary>
            <param name="promoId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetUploadPromoAttachment(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            upload excel with promo attachment info and get promo with SKP note in return
            </summary>
            <param name="formFile"></param>
            <returns>List of promo with SKP note</returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXMLGenerateDtos(Repositories.Entities.Models.EntityParam)">
            <summary>
            Generate XML data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GenerateXMLFlagging(Repositories.Entities.Models.XmlFlaggingBody)">
            <summary>
            Generate XML flagging data, Old API = [POST]"xmlgenerate/flagging"
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXmlGenerateAccrual(Repositories.Entities.Models.XmlGenerateAccrualBody)">
            <summary>
            Generate XML accrual data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXMLGenerateNonBatch(Repositories.Entities.Models.EntityParam)">
            <summary>
            Generate XML non batch data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXMLGenerateNonBatchDistributorPayment(Repositories.Entities.Models.EntityParam)">
            <summary>
            Generate XML non batch distributor payment data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GenerateXMLPaymentBatch(Repositories.Entities.Models.XMLGeneratePaymentBatchBody)">
            <summary>
            Generate XML batch payment data
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GenerateXMLAccrualbyId(System.Int32)">
            <summary>
            Generate XML accrual by Id, Old EP = "api/xmlgenerate/accrualbyId""
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXMLFlaggingList(System.Int32,System.String,System.String)">
            <summary>
            Generate XML accrual by Id
            </summary>
            <param name="entityId"></param>
            <param name="userProfileId"></param>
            <param name="generateOn"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.XMLFlaggingUpdate(V7.Model.Tools.XMLFlaggingUpdateParam)">
            <summary>
            Update xml generate flagging
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXMLUploadList(Repositories.Entities.Models.XMLUploadListBody)">
            <summary>
            Get list data xml upload
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.XMLUpload(Repositories.Entities.Models.XMLUploadBody)">
            <summary>
            Create xml upload
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXMLFlaggingListHistory(Repositories.Entities.Models.XMLFlaggingHistoryBody)">
            <summary>
            Get history data xml flagging 
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXMLGenerateNMN(Repositories.Entities.Models.XMLGenerateNMNbody)">
            <summary>
            XML generate nmn by Id
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetXMLBatchName(Repositories.Entities.Models.XMLGenerateBatchNameBodyReq)">
            <summary>
            XML generate batch name
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetDistributorbyEntity(System.Int32)">
            <summary>
            Get distributor dropdown data base on entity id
            </summary>
            <param name="PrincipalId"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetEntityforXMLGenerate">
            <summary>
            Get entity dropdown data base on entity id
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetUserList(System.String,System.Int32,System.Int32)">
            <summary>
            Get user profile data for xml generate
            </summary>
            <param name="usergroupid"></param>
            <param name="userlevel"></param>
            <param name="isdeleted"></param>
            <returns></returns>
        </member>
        <member name="M:V7.Controllers.Tools.ToolsController.GetPromoAccrualHeader(System.String,System.Int32,System.String)">
            <summary>
            Get Promo Accrual Report Header, Old EP = "promo/accrualreportheader"
            </summary>
            <param name="periode"></param>
            <param name="entityId"></param>
            <param name="closingDate"></param>
            <returns></returns>
        </member>
        <member name="P:V7.Model.Login.Id">
            <summary>
            user email for id
            </summary>
        </member>
        <member name="T:V7.Model.LPParam">
            <summary>
            defult param in every landing page
            </summary>
        </member>
        <member name="P:V7.Model.LPParam.Search">
            <summary>
            search text in every string column
            </summary>
        </member>
        <member name="P:V7.Model.LPParam.PageNumber">
            <summary>
            Page number start form 0
            </summary>
        </member>
        <member name="P:V7.Model.LPParam.PageSize">
            <summary>
            default value is 10, to show all set -1
            </summary>
        </member>
        <member name="P:V7.Model.LPParamReq.PageNumber">
            <summary>
            Page number start form 0
            </summary>
        </member>
        <member name="P:V7.Model.LPParamReq.PageSize">
            <summary>
            default value is 10, to show all set -1
            </summary>
        </member>
        <member name="P:V7.Model.LPParamReq.txtSearch">
            <summary>
            search text in every string column
            </summary>
        </member>
        <member name="P:V7.Model.LPParamReq.order">
            <summary>
            order by column name
            </summary>
        </member>
        <member name="P:V7.Model.LPParamReq.sort">
            <summary>
            sort direction ASC/DESC
            </summary>
        </member>
        <member name="P:V7.Model.DistributorWHTLPRequest.sortColumn">
            <summary>
            sort data by any column name showing
            </summary>        
        </member>
        <member name="F:V7.Model.Promo.enBudgetRemaining.ALL">
            <summary>
            show all budget
            </summary>
        </member>
        <member name="F:V7.Model.Promo.enBudgetRemaining._0To10M">
            <summary>
            show budget 0-10M
            </summary>
        </member>
        <member name="F:V7.Model.Promo.enBudgetRemaining._10To100M">
            <summary>
            show budget 10-100M
            </summary>
        </member>
        <member name="F:V7.Model.Promo.enBudgetRemaining._100To500M">
            <summary>
            show budget 100-500M
            </summary>
        </member>
        <member name="F:V7.Model.Promo.enBudgetRemaining._500To1B">
            <summary>
            show budget 500-1B
            </summary>
        </member>
        <member name="F:V7.Model.Promo.enBudgetRemaining.Above1B">
            <summary>
            show budget above 1B
            </summary>
        </member>
        <member name="T:V7.Model.UserAccess.fltToogle">
            <summary>
            record status filter
            </summary>
        </member>
        <member name="T:V7.Model.UserAccess.sortDirection">
            <summary>
            Sort Direction
            </summary>
        </member>
        <member name="T:V7.Model.UserAccess.usersLPParam">
            <summary>
            user LP paramater
            </summary>
        </member>
        <member name="T:V7.Services.FileService">
            <summary>
            
            </summary>
        </member>
        <member name="M:V7.Services.FileService.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="M:V7.Services.FileService.GetRootPath">
            <summary>
            Get Root Path from IWebHostEnvironment
            </summary>
            <returns></returns>
        </member>
        <member name="M:V7.Services.FileService.UploadFile(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="files"></param>
            <param name="subDirectory"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:V7.Services.Helper">
            <summary>
            Helper
            </summary>
        </member>
        <member name="M:V7.Services.Helper.generateStrongPassword(System.Int32,System.Boolean,System.String)">
            <summary>
            generateStrongPassword
            </summary>
        </member>
        <member name="T:V7.Services.TokenManager">
            <summary>
            Serve and handle token proccess
            </summary>
        </member>
        <member name="M:V7.Services.TokenManager.GenerateToken(System.String,Repositories.Entities.Dtos.AuthClaim,System.Int32)">
            <summary>
            Generate token and store the user info as claim name
            </summary>
            <param name="Secret">secret phrase from configuration</param>
            <param name="UserClaim">Any user data to store</param>
            <param name="TokenAge">set in minutes</param>
            <returns></returns>
        </member>
        <member name="M:V7.Services.TokenManager.GetClaim(System.String,System.String)">
            <summary>
            Get user stored info by token
            </summary>
            <param name="Secret">secret phrase from configuration</param>
            <param name="token">token generated from login proccess</param>
            <returns></returns>
        </member>
        <member name="T:V7.MessagingServices.MessageService">
            <summary>
            Provide message constant for consistency
            </summary>
        </member>
        <member name="F:V7.MessagingServices.MessageService.SaveSuccess">
            <summary>
            Successfully save data
            </summary>
        </member>
        <member name="T:WebAPI.Controllers.UserAccessController">
            <summary>
            User Access Controller
            </summary>
            <summary>
            User Profile handler
            </summary>
            <summary>
            User Access Controller
            </summary>
            <summary>
            User Access Controller
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUserAdminReportLandingPage(V7.Model.UserAccess.UserAdminReportListRequestParam)">
            <summary>
            Get List Admin Report With Paginate
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUserGroupMenuLandingPage(V7.Model.UserAccess.UserGroupMenuListRequestParam)">
            <summary>
            get data user group with paginate filter
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUserGroupMenuById(System.String)">
            <summary>
            get user group by id
            </summary>
            <param name="usergroupid"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.UpdateUserGroupMenu(V7.Model.UserAccess.UserGroupMenuCreateBodyParam)">
            <summary>
            edit user group
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.DeleteUserGroupMenu(V7.Model.UserAccess.userGroupIdParam)">
            <summary>
            deleting user group
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.CreateUserGroupMenu(Repositories.Entities.Models.UserGroupMenuCreateBody)">
            <summary>
            Createing user group
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUserGroupRightsMenu(V7.Model.UserAccess.userGroupIdParam)">
            <summary>
            Get All menu
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.SaveUserGroupRightsMenu(Repositories.Entities.Models.UserRightPostDto)">
            <summary>
            Save Configuration Menu by User Group ID
            </summary>
            <param name="userRightPostDto"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetListUserLevelByUserGroup(System.String)">
            <summary>
            Get List User Rights by User Group Id
            </summary>
            <param name="userGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetLevelId(V7.Model.UserAccess.userLevelParam)">
            <summary>
            Get Permission Menu
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetLevelMenuId(V7.Model.UserAccess.CRUDMenuDto)">
            <summary>
            Get Permission Access
            </summary>
            <param name="cRUDMenuDto"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.SaveLevelMenu(Repositories.Entities.Models.UserLevelAccess)">
            <summary>
            Save Permission Access
            </summary>
            <param name="userLevelAccess"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUserProfile(V7.Model.UserAccess.userProfileLPParam)">
            <summary>
            Get User Profile with pagination
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetById(System.String)">
            <summary>
            Get Data User Profile by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetListUserGroup">
            <summary>
            Get List User Group
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetListProfileCategory">
            <summary>
            Get list category
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetListUserRights(System.String)">
            <summary>
            Get List User Rights by User Group ID
            </summary>
            <param name="UserGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.CreateUserProfile(V7.Model.UserAccess.UserAccessProfileInsertParam)">
            <summary>
            Create User Profile
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.UpdateUserProfile(V7.Model.UserAccess.UserAccessProfileInsertParam)">
            <summary>
            Update User Profile
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.DeleteUserProfile(V7.Model.UserAccess.userIdParam)">
            <summary>
             Delete userprofile - make user profile inactive
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.ActivateUserProfile(V7.Model.UserAccess.userIdParam)">
            <summary>
             Activate userprofile 
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetProfileDistributor">
            <summary>
            Get List Distributor
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetProfileChannnelList">
            <summary>
            get active channel list
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUsers(V7.Model.UserAccess.usersLPParam)">
            <summary>
            Get data user with paginate filter 
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.DeleteUsers(V7.Model.UserAccess.userIdParam)">
            <summary>
            Delete - make user inactive
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUserByID(System.String)">
            <summary>
            Get user by ID
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.ActivateUsers(V7.Model.UserAccess.userIdParam)">
            <summary>
            Activate user
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.CreateUsers(V7.Model.UserAccess.UserProfileInsertParam)">
            <summary>
            Create New User
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.UpdateUsers(V7.Model.UserAccess.UserProfileInsertParam)">
            <summary>
            Update User
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetListUserProfile">
            <summary>
            Get List User Profile
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUserGroupRights(V7.Model.UserAccess.usersLevelLPParam)">
            <summary>
            Get user group rights with pagination filter
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.GetUserGroupRightsByID(System.Int32)">
            <summary>
            get user group by userlevel id
            </summary>
            <param name="userlevel"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.DeleteUserGroupRights(V7.Model.UserAccess.userLevelIdParam)">
            <summary>
            Delete user group rights
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.createUserGroup(V7.Model.UserAccess.userLevelCreateParam)">
            <summary>
            Create new user group
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserAccessController.UpdateUserGroup(V7.Model.UserAccess.userLevelCreateParam)">
            <summary>
            update user group
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
    </members>
</doc>
